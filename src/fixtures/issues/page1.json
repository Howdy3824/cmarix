{
"link": "<https://api.github.com/repositories/8514/issues?per_page=25&page=2>; rel=\"next\", <https://api.github.com/repositories/8514/issues?per_page=25&page=49>; rel=\"last\"",
"data": [
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27599",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27599/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27599/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27599/events",
    "html_url": "https://github.com/rails/rails/pull/27599",
    "id": 199328180,
    "number": 27599,
    "title": "Fix bug with symbolized keys in .where with nested join (alternative to #27598)",
    "user": {
      "login": "NickLaMuro",
      "id": 314014,
      "avatar_url": "https://avatars.githubusercontent.com/u/314014?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NickLaMuro",
      "html_url": "https://github.com/NickLaMuro",
      "followers_url": "https://api.github.com/users/NickLaMuro/followers",
      "following_url": "https://api.github.com/users/NickLaMuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/NickLaMuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NickLaMuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NickLaMuro/subscriptions",
      "organizations_url": "https://api.github.com/users/NickLaMuro/orgs",
      "repos_url": "https://api.github.com/users/NickLaMuro/repos",
      "events_url": "https://api.github.com/users/NickLaMuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NickLaMuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sgrif",
      "id": 1529387,
      "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgrif",
      "html_url": "https://github.com/sgrif",
      "followers_url": "https://api.github.com/users/sgrif/followers",
      "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
      "organizations_url": "https://api.github.com/users/sgrif/orgs",
      "repos_url": "https://api.github.com/users/sgrif/repos",
      "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgrif/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-07T01:05:51Z",
    "updated_at": "2017-01-07T01:15:38Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27599",
      "html_url": "https://github.com/rails/rails/pull/27599",
      "diff_url": "https://github.com/rails/rails/pull/27599.diff",
      "patch_url": "https://github.com/rails/rails/pull/27599.patch"
    },
    "body": "Summary\n-------\nIn https://github.com/rails/rails/pull/25146, code was added to fix making where clauses against tables with an `enum` column with a `join` present as part of the query.  As part of this fix, it called `singularize` on the `table_name` variable that was passed into the `associated_table` method.\n\n`table_name`, in some circumstances, can also be a symbol if more than one level of joins exists in the Relation (i.e `joins(:book => :subscription)`).  This fixes that by adding chaning the `.stringify_keys!` (found in `ActiveRecord::Relation::WhereClauseFactory`) to be a `.deep_stringify_keys!` to stringfy keys at all levels.\n\n\nOther Information\n-----------------\nThis bug only surfaces when a join is made more than 1 level deep since the `where_clause_builder` calls `stringify_keys!` on the top level of the `.where` hash:\n\nhttps://github.com/rails/rails/blob/21e5fd4/activerecord/lib/active_record/relation/where_clause_factory.rb#L16\n\nSo this hides this edge case from showing up in the test suite with the current coverage and the test that was in PR #25146.\n\nThis is the alternative to https://github.com/rails/rails/pull/27598 in which the change from PR #25146 was fixed in isolation.  Instead, here we fix the false assumption that all `table_name` values being passed into `.associated_table` are a string.  This might have wider effects because of that, so that should be considered when reviewing."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27598",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27598/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27598/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27598/events",
    "html_url": "https://github.com/rails/rails/pull/27598",
    "id": 199327680,
    "number": 27598,
    "title": "Fix bug with symbolized keys in .where with nested join",
    "user": {
      "login": "NickLaMuro",
      "id": 314014,
      "avatar_url": "https://avatars.githubusercontent.com/u/314014?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/NickLaMuro",
      "html_url": "https://github.com/NickLaMuro",
      "followers_url": "https://api.github.com/users/NickLaMuro/followers",
      "following_url": "https://api.github.com/users/NickLaMuro/following{/other_user}",
      "gists_url": "https://api.github.com/users/NickLaMuro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/NickLaMuro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/NickLaMuro/subscriptions",
      "organizations_url": "https://api.github.com/users/NickLaMuro/orgs",
      "repos_url": "https://api.github.com/users/NickLaMuro/repos",
      "events_url": "https://api.github.com/users/NickLaMuro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/NickLaMuro/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sgrif",
      "id": 1529387,
      "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgrif",
      "html_url": "https://github.com/sgrif",
      "followers_url": "https://api.github.com/users/sgrif/followers",
      "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
      "organizations_url": "https://api.github.com/users/sgrif/orgs",
      "repos_url": "https://api.github.com/users/sgrif/repos",
      "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgrif/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-07T01:00:48Z",
    "updated_at": "2017-01-07T01:15:33Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27598",
      "html_url": "https://github.com/rails/rails/pull/27598",
      "diff_url": "https://github.com/rails/rails/pull/27598.diff",
      "patch_url": "https://github.com/rails/rails/pull/27598.patch"
    },
    "body": "Summary\n-------\nIn https://github.com/rails/rails/pull/25146, code was added to fix making where clauses against tables with an `enum` column with a `join` present as part of the query.  As part of this fix, it called `singularize` on the `table_name` variable that was passed into the `associated_table` method.\n\n`table_name`, in some circumstances, can also be a symbol if more than one level of joins exists in the Relation (i.e `joins(:book => :subscription)`).  This fixes that by adding `.to_s` before calling `.singularize` on the `table_name` variable.\n\n\nOther Information\n-----------------\nThis bug only surfaces when a join is made more than 1 level deep since the `where_clause_builder` calls `stringify_keys!` on the top level of the `.where` hash:\n\nhttps://github.com/rails/rails/blob/21e5fd4/activerecord/lib/active_record/relation/where_clause_factory.rb#L16\n\nSo this hides this edge case from showing up in the test suite with the current coverage and the test that was in PR #25146.\n\nThe other solution to this problem is to deeply stringify the keys in the `where_clause_builder` and all method calls following that can safely assume strings are being passed in as keys.  This is a heavier hammer, but the assumption is already being made on the top level to do this, so it seems like a better place to put it instead of scattered throughout the codebase and having it handle both strings/symbols in multiple places.  This alternative will be proposed in a separate PR.\n\n\nAlso of note, the this probably isn't the best place for a test like this, but it was the simplest way I could get a test in place without familiarizing myself with the entire ActiveRecord test suite (copying what was done in the previous PR).  Suggestions welcome for a better place for this test to live, but it is worth noting that this same test will also be used to confirm the same working functionality in the alternative form for this PR."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27597",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27597/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27597/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27597/events",
    "html_url": "https://github.com/rails/rails/pull/27597",
    "id": 199307639,
    "number": 27597,
    "title": "Consistency between first() and last() with limit",
    "user": {
      "login": "brchristian",
      "id": 2460418,
      "avatar_url": "https://avatars.githubusercontent.com/u/2460418?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brchristian",
      "html_url": "https://github.com/brchristian",
      "followers_url": "https://api.github.com/users/brchristian/followers",
      "following_url": "https://api.github.com/users/brchristian/following{/other_user}",
      "gists_url": "https://api.github.com/users/brchristian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brchristian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brchristian/subscriptions",
      "organizations_url": "https://api.github.com/users/brchristian/orgs",
      "repos_url": "https://api.github.com/users/brchristian/repos",
      "events_url": "https://api.github.com/users/brchristian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brchristian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-06T22:34:28Z",
    "updated_at": "2017-01-06T22:46:24Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27597",
      "html_url": "https://github.com/rails/rails/pull/27597",
      "diff_url": "https://github.com/rails/rails/pull/27597.diff",
      "patch_url": "https://github.com/rails/rails/pull/27597.patch"
    },
    "body": "Fixes #23979.\r\n\r\nAs discussed in #23979, there was an inconsistency between the way that `first()` and `last()` would interact with `limit`. Specifically:\r\n\r\n```Ruby\r\n> Topic.limit(1).first(2).size\r\n=> 2\r\n> Topic.limit(1).last(2).size\r\n=> 1\r\n```\r\n\r\nThis PR is a refactor and rebase of #24124, with a simpler test suite and simpler implementation.\r\n\r\nDiscussion with Rails community members as well as DHH in https://github.com/rails/rails/pull/23598#issuecomment-189675440 showed that the behavior or `first` should be brought into line with `last` (rather than vice-versa).\r\n\r\nThis PR resolves the inconsistency between `first` and `last` when used in conjunction with `limit`.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27595",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27595/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27595/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27595/events",
    "html_url": "https://github.com/rails/rails/issues/27595",
    "id": 199262959,
    "number": 27595,
    "title": "has_many :through with `include Comparable`",
    "user": {
      "login": "jnimety",
      "id": 70484,
      "avatar_url": "https://avatars.githubusercontent.com/u/70484?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jnimety",
      "html_url": "https://github.com/jnimety",
      "followers_url": "https://api.github.com/users/jnimety/followers",
      "following_url": "https://api.github.com/users/jnimety/following{/other_user}",
      "gists_url": "https://api.github.com/users/jnimety/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jnimety/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jnimety/subscriptions",
      "organizations_url": "https://api.github.com/users/jnimety/orgs",
      "repos_url": "https://api.github.com/users/jnimety/repos",
      "events_url": "https://api.github.com/users/jnimety/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jnimety/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      },
      {
        "id": 107186,
        "url": "https://api.github.com/repos/rails/rails/labels/regression",
        "name": "regression",
        "color": "e10c02",
        "default": false
      },
      {
        "id": 126910270,
        "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
        "name": "With reproduction steps",
        "color": "009800",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2017-01-06T18:57:48Z",
    "updated_at": "2017-01-06T22:59:05Z",
    "closed_at": null,
    "body": "I'm not sure this is a bug but this has worked in previous versions of rails and stopped working in rails 5.0.1. It was a huge pain to track down so if nothing else maybe someone will find this if they're running into a similar issue.\r\n\r\nIf a has_many :through join model includes Comparable then creating join records through the association does not set the foreign key for all but the first record. For example, in the test below, `Event.create(user_ids: [user1.id, user2.id])` will create two Invite join records but only the first one is assigned an event_id.\r\n \r\n### Steps to reproduce\r\n\r\n```\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", \"5.0.1\"\r\n  #gem \"activerecord\", \"5.0.0.1\"\r\n  gem \"pg\"\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection adapter: \"postgresql\"\r\nActiveRecord::Base.connection.drop_database \"test_has_many_through_with_comparable\"\r\nActiveRecord::Base.connection.create_database \"test_has_many_through_with_comparable\"\r\nActiveRecord::Base.establish_connection adapter: \"postgresql\", database: \"test_has_many_through_with_comparable\"\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :events, force: true do |t|\r\n  end\r\n\r\n  create_table :invites, force: true do |t|\r\n    t.integer :event_id\r\n    t.integer :user_id\r\n  end\r\n\r\n  create_table :users, force: true do |t|\r\n  end\r\nend\r\n\r\nclass Event < ActiveRecord::Base\r\n  has_many :invites\r\n\r\n  has_many :users, :through => :invites\r\nend\r\n\r\nclass Invite < ActiveRecord::Base\r\n  include Comparable\r\n\r\n  belongs_to :event\r\n  belongs_to :user\r\nend\r\n\r\nclass User < ActiveRecord::Base\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_has_many_through_with_comparable\r\n    user1 = User.create\r\n    user2 = User.create\r\n\r\n    event = Event.create(user_ids: [user1.id, user2.id]) # Invite#event_id does not get set for user2\r\n\r\n    assert_equal event.invites.count, 2\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nCorrectly create joins records with foreign_keys correctly populated\r\n\r\n### Actual behavior\r\n\r\nforeign_keys are nil\r\n\r\n### System configuration\r\n**Rails version**: 5.0.1\r\n\r\n**Ruby version**: 2.3.3\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27594",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27594/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27594/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27594/events",
    "html_url": "https://github.com/rails/rails/pull/27594",
    "id": 199240846,
    "number": 27594,
    "title": "clarifies usage of blocks when fetching from cache",
    "user": {
      "login": "manvsmachine",
      "id": 301424,
      "avatar_url": "https://avatars.githubusercontent.com/u/301424?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/manvsmachine",
      "html_url": "https://github.com/manvsmachine",
      "followers_url": "https://api.github.com/users/manvsmachine/followers",
      "following_url": "https://api.github.com/users/manvsmachine/following{/other_user}",
      "gists_url": "https://api.github.com/users/manvsmachine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/manvsmachine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/manvsmachine/subscriptions",
      "organizations_url": "https://api.github.com/users/manvsmachine/orgs",
      "repos_url": "https://api.github.com/users/manvsmachine/repos",
      "events_url": "https://api.github.com/users/manvsmachine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/manvsmachine/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "matthewd",
      "id": 1034,
      "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewd",
      "html_url": "https://github.com/matthewd",
      "followers_url": "https://api.github.com/users/matthewd/followers",
      "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewd/orgs",
      "repos_url": "https://api.github.com/users/matthewd/repos",
      "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewd/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "matthewd",
        "id": 1034,
        "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/matthewd",
        "html_url": "https://github.com/matthewd",
        "followers_url": "https://api.github.com/users/matthewd/followers",
        "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
        "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
        "organizations_url": "https://api.github.com/users/matthewd/orgs",
        "repos_url": "https://api.github.com/users/matthewd/repos",
        "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/matthewd/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2017-01-06T17:03:41Z",
    "updated_at": "2017-01-06T17:06:53Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27594",
      "html_url": "https://github.com/rails/rails/pull/27594",
      "diff_url": "https://github.com/rails/rails/pull/27594.diff",
      "patch_url": "https://github.com/rails/rails/pull/27594.patch"
    },
    "body": "### Summary\r\n\r\nThis clarifies the behaviour of blocks when they are used with Rails cache fetching - the existing documentation neglects to mention that the block does not always execute.\r\n\r\n### Other Information\r\n\r\nN/A"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27593",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27593/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27593/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27593/events",
    "html_url": "https://github.com/rails/rails/issues/27593",
    "id": 199230854,
    "number": 27593,
    "title": "Yield in partial view does not call block given by calling view",
    "user": {
      "login": "carrieje",
      "id": 4522528,
      "avatar_url": "https://avatars.githubusercontent.com/u/4522528?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carrieje",
      "html_url": "https://github.com/carrieje",
      "followers_url": "https://api.github.com/users/carrieje/followers",
      "following_url": "https://api.github.com/users/carrieje/following{/other_user}",
      "gists_url": "https://api.github.com/users/carrieje/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carrieje/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carrieje/subscriptions",
      "organizations_url": "https://api.github.com/users/carrieje/orgs",
      "repos_url": "https://api.github.com/users/carrieje/repos",
      "events_url": "https://api.github.com/users/carrieje/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carrieje/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 3666649,
        "url": "https://api.github.com/repos/rails/rails/labels/actionview",
        "name": "actionview",
        "color": "d7e102",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-06T16:19:23Z",
    "updated_at": "2017-01-06T22:44:45Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n\r\nCreate following controller and views.\r\n\r\n`app/controller/welcome_controller.rb`\r\n```\r\nclass WelcomeController < ApplicationController\r\n  def index\r\n    render 'welcome/index'\r\n  end\r\nend\r\n```\r\n\r\n`app/views/welcome/index.html.erb`\r\n```\r\nHello. <br />\r\n<%= render('partial') do %>\r\n  proud\r\n<% end %><br />\r\nGoodbye though.\r\n```\r\n\r\n`app/views/welcome/_partial.html.erb`\r\n```\r\nI am partially <%= yield %>.\r\n```\r\n\r\n### Expected behavior\r\n\r\nRendered HTML should be ([Rails guide](http://guides.rubyonrails.org/layouts_and_rendering.html#using-partials))\r\n\r\n```\r\nHello. <br />\r\nI am partially  proud.\r\n<br />\r\nGoodbye though.\r\n```\r\n\r\n### Actual behavior\r\n\r\nRendered HTML was\r\n\r\n```\r\nHello. <br />\r\nI am partially .\r\n<br />\r\nGoodbye though.\r\n```\r\n\r\nMy block was not executed.\r\n\r\n### System configuration\r\n**Rails version**: `4.2.7.1`\r\n\r\n**Ruby version**: `2.3.0`"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27591",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27591/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27591/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27591/events",
    "html_url": "https://github.com/rails/rails/issues/27591",
    "id": 199193609,
    "number": 27591,
    "title": "Rails 5 scaffold_controller generates html files when --api flag is used",
    "user": {
      "login": "codehugger",
      "id": 615,
      "avatar_url": "https://avatars.githubusercontent.com/u/615?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/codehugger",
      "html_url": "https://github.com/codehugger",
      "followers_url": "https://api.github.com/users/codehugger/followers",
      "following_url": "https://api.github.com/users/codehugger/following{/other_user}",
      "gists_url": "https://api.github.com/users/codehugger/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/codehugger/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/codehugger/subscriptions",
      "organizations_url": "https://api.github.com/users/codehugger/orgs",
      "repos_url": "https://api.github.com/users/codehugger/repos",
      "events_url": "https://api.github.com/users/codehugger/events{/privacy}",
      "received_events_url": "https://api.github.com/users/codehugger/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107195,
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-06T13:10:37Z",
    "updated_at": "2017-01-06T22:48:16Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n\r\n```bash\r\nrails new myapp\r\ncd myapp\r\nrails g model todo title:string\r\nrails db:migrate\r\nrails g scaffold_controller api::todo --api\r\n```\r\n\r\n### Expected behavior\r\nThe steps above should only create jbuilder views\r\n\r\n### Actual behavior\r\nCreates both jbuilder and html views\r\n\r\n![screen shot 2017-01-06 at 13 10 00](https://cloud.githubusercontent.com/assets/615/21718767/7703f346-d411-11e6-9a72-b3ebe85af85b.png)\r\n\r\n### System configuration\r\n**Rails version**: Rails 5.0.1\r\n\r\n**Ruby version**: ruby 2.3.3p222 (2016-11-21 revision 56859) [x86_64-darwin16]\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27589",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27589/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27589/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27589/events",
    "html_url": "https://github.com/rails/rails/pull/27589",
    "id": 199188105,
    "number": 27589,
    "title": "Reduce `serialize` in `changed_in_place?`",
    "user": {
      "login": "kamipo",
      "id": 12642,
      "avatar_url": "https://avatars.githubusercontent.com/u/12642?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamipo",
      "html_url": "https://github.com/kamipo",
      "followers_url": "https://api.github.com/users/kamipo/followers",
      "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamipo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
      "organizations_url": "https://api.github.com/users/kamipo/orgs",
      "repos_url": "https://api.github.com/users/kamipo/repos",
      "events_url": "https://api.github.com/users/kamipo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamipo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sgrif",
      "id": 1529387,
      "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgrif",
      "html_url": "https://github.com/sgrif",
      "followers_url": "https://api.github.com/users/sgrif/followers",
      "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
      "organizations_url": "https://api.github.com/users/sgrif/orgs",
      "repos_url": "https://api.github.com/users/sgrif/repos",
      "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgrif/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-06T12:37:50Z",
    "updated_at": "2017-01-06T22:47:32Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27589",
      "html_url": "https://github.com/rails/rails/pull/27589",
      "diff_url": "https://github.com/rails/rails/pull/27589.diff",
      "patch_url": "https://github.com/rails/rails/pull/27589.patch"
    },
    "body": "If `raw_old_value` is needed `deserialize` to normalization, unneeded\r\n`serialize` again because `new_value` is deserialized value."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27588",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27588/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27588/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27588/events",
    "html_url": "https://github.com/rails/rails/pull/27588",
    "id": 199165913,
    "number": 27588,
    "title": "PostgreSQL JSONB columns do not preserve the key order of hashes",
    "user": {
      "login": "bradleypriest",
      "id": 167215,
      "avatar_url": "https://avatars.githubusercontent.com/u/167215?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bradleypriest",
      "html_url": "https://github.com/bradleypriest",
      "followers_url": "https://api.github.com/users/bradleypriest/followers",
      "following_url": "https://api.github.com/users/bradleypriest/following{/other_user}",
      "gists_url": "https://api.github.com/users/bradleypriest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bradleypriest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bradleypriest/subscriptions",
      "organizations_url": "https://api.github.com/users/bradleypriest/orgs",
      "repos_url": "https://api.github.com/users/bradleypriest/repos",
      "events_url": "https://api.github.com/users/bradleypriest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bradleypriest/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 70310659,
        "url": "https://api.github.com/repos/rails/rails/labels/PostgreSQL",
        "name": "PostgreSQL",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sgrif",
      "id": 1529387,
      "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgrif",
      "html_url": "https://github.com/sgrif",
      "followers_url": "https://api.github.com/users/sgrif/followers",
      "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
      "organizations_url": "https://api.github.com/users/sgrif/orgs",
      "repos_url": "https://api.github.com/users/sgrif/repos",
      "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgrif/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 5,
    "created_at": "2017-01-06T10:19:23Z",
    "updated_at": "2017-01-07T01:44:40Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27588",
      "html_url": "https://github.com/rails/rails/pull/27588",
      "diff_url": "https://github.com/rails/rails/pull/27588.diff",
      "patch_url": "https://github.com/rails/rails/pull/27588.patch"
    },
    "body": "### Summary\r\n\r\nPostgreSQL JSONB columns do not preserve the key order of hashes\r\n\r\nhttps://www.postgresql.org/docs/9.6/static/datatype-json.html\r\n\r\nDue to this setting a JSONB column to the same hash twice can cause `model.changed?` to return false positives\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27587",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27587/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27587/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27587/events",
    "html_url": "https://github.com/rails/rails/pull/27587",
    "id": 199160022,
    "number": 27587,
    "title": "Remove deprecated callbacks from ActionDispatch middlewares",
    "user": {
      "login": "rafaelfranca",
      "id": 47848,
      "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/49",
      "html_url": "https://github.com/rails/rails/milestone/49",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/49/labels",
      "id": 1601639,
      "number": 49,
      "title": "5.1.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 16,
      "closed_issues": 24,
      "state": "open",
      "created_at": "2016-02-24T03:19:34Z",
      "updated_at": "2017-01-06T09:48:36Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 0,
    "created_at": "2017-01-06T09:48:30Z",
    "updated_at": "2017-01-06T09:48:43Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27587",
      "html_url": "https://github.com/rails/rails/pull/27587",
      "diff_url": "https://github.com/rails/rails/pull/27587.diff",
      "patch_url": "https://github.com/rails/rails/pull/27587.patch"
    },
    "body": "@matthewd I'm most seeking review for the documentation at `ActionDispatch::Reloader` since I'm not sure we want to add more information."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27585",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27585/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27585/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27585/events",
    "html_url": "https://github.com/rails/rails/pull/27585",
    "id": 199058459,
    "number": 27585,
    "title": "Test inconsistent behavior of infinite values in PG date columns.",
    "user": {
      "login": "sbleon",
      "id": 198711,
      "avatar_url": "https://avatars.githubusercontent.com/u/198711?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sbleon",
      "html_url": "https://github.com/sbleon",
      "followers_url": "https://api.github.com/users/sbleon/followers",
      "following_url": "https://api.github.com/users/sbleon/following{/other_user}",
      "gists_url": "https://api.github.com/users/sbleon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sbleon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sbleon/subscriptions",
      "organizations_url": "https://api.github.com/users/sbleon/orgs",
      "repos_url": "https://api.github.com/users/sbleon/repos",
      "events_url": "https://api.github.com/users/sbleon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sbleon/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 70310659,
        "url": "https://api.github.com/repos/rails/rails/labels/PostgreSQL",
        "name": "PostgreSQL",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "senny",
      "id": 5402,
      "avatar_url": "https://avatars.githubusercontent.com/u/5402?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/senny",
      "html_url": "https://github.com/senny",
      "followers_url": "https://api.github.com/users/senny/followers",
      "following_url": "https://api.github.com/users/senny/following{/other_user}",
      "gists_url": "https://api.github.com/users/senny/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/senny/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/senny/subscriptions",
      "organizations_url": "https://api.github.com/users/senny/orgs",
      "repos_url": "https://api.github.com/users/senny/repos",
      "events_url": "https://api.github.com/users/senny/events{/privacy}",
      "received_events_url": "https://api.github.com/users/senny/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "senny",
        "id": 5402,
        "avatar_url": "https://avatars.githubusercontent.com/u/5402?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/senny",
        "html_url": "https://github.com/senny",
        "followers_url": "https://api.github.com/users/senny/followers",
        "following_url": "https://api.github.com/users/senny/following{/other_user}",
        "gists_url": "https://api.github.com/users/senny/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/senny/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/senny/subscriptions",
        "organizations_url": "https://api.github.com/users/senny/orgs",
        "repos_url": "https://api.github.com/users/senny/repos",
        "events_url": "https://api.github.com/users/senny/events{/privacy}",
        "received_events_url": "https://api.github.com/users/senny/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-05T21:02:10Z",
    "updated_at": "2017-01-05T21:26:03Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27585",
      "html_url": "https://github.com/rails/rails/pull/27585",
      "diff_url": "https://github.com/rails/rails/pull/27585.diff",
      "patch_url": "https://github.com/rails/rails/pull/27585.patch"
    },
    "body": "Of the three failing tests in this PR, the range-related one works when run\non v5.0.0.1, but fails on v5.0.1 and master. So it's a behavior change but I'm not\nsure what caused it.\n\nThe SQL generated by the range test in various versions looks like:\n```\nv501_sql_with_strings = <<-SQL\n  SELECT \"postgresql_infinities\".*\n  FROM \"postgresql_infinities\"\n  WHERE (\"postgresql_infinities\".\"date\" BETWEEN NULL AND NULL)\nSQL\n\nv5001_sql_with_strings = <<-SQL\n  SELECT \"postgresql_infinities\".*\n  FROM \"postgresql_infinities\"\n  WHERE (\"postgresql_infinities\".\"date\" BETWEEN '-infinity' AND 'infinity')\nSQL\n\nv501_sql_with_constants = <<-SQL\n  SELECT \"postgresql_infinities\".* FROM \"postgresql_infinities\" WHERE (1=1)\nSQL\n```\n\nThe workaround for the change in behavior is to use `::Float::INFINITY` instead\nof `'infinity'` or `'-infinity'` in your ranges.\n\nThe other two tests failed in v5.0.0.1 as well as in v5.0.1 and master.\n\nI think that `date` columns should behave the same way as `timestamp` columns\ndo with respect to infinite values. Specifically, `'infinity'`, `'-infinity'`,\n`::Float::INFINITY` and `-::Float::INFINITY` should all be valid values in\n`update` statements and `where` clauses. I suspect that this might require the\ncreation of an `ActiveRecord::ConnectionAdapters::PostgreSQL::OID::Date` that\nworks similarly to `ActiveRecord::ConnectionAdapters::PostgreSQL::OID::DateTime`."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27582",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27582/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27582/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27582/events",
    "html_url": "https://github.com/rails/rails/issues/27582",
    "id": 198962990,
    "number": 27582,
    "title": "ActiveRecord::StatementInvalid in after_touch callback when using associations.",
    "user": {
      "login": "yukideluxe",
      "id": 792820,
      "avatar_url": "https://avatars.githubusercontent.com/u/792820?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yukideluxe",
      "html_url": "https://github.com/yukideluxe",
      "followers_url": "https://api.github.com/users/yukideluxe/followers",
      "following_url": "https://api.github.com/users/yukideluxe/following{/other_user}",
      "gists_url": "https://api.github.com/users/yukideluxe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yukideluxe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yukideluxe/subscriptions",
      "organizations_url": "https://api.github.com/users/yukideluxe/orgs",
      "repos_url": "https://api.github.com/users/yukideluxe/repos",
      "events_url": "https://api.github.com/users/yukideluxe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yukideluxe/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 41328116,
        "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
        "name": "attached PR",
        "color": "006b75",
        "default": false
      },
      {
        "id": 126910270,
        "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
        "name": "With reproduction steps",
        "color": "009800",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2017-01-05T14:04:47Z",
    "updated_at": "2017-01-05T20:19:36Z",
    "closed_at": null,
    "body": "Hola 👋 \r\n\r\nIt took me a while to track this bug down and finding a way to reproduce it but finally I have it! I will try to explain my findings as best as I can.\r\n\r\nAfter switching from 5.0.0.1 to 5.0.1 an `ActiveRecord::StatementInvalid` exception is raised in my tests and it looks like that `ActiveRecord` is not building the query as expected when doing a `mininum` – and per extension `maximum`, `average` and others – calculation. I couldn't figure which was the problem out until I used `git bisect` and I detected that the commit that introduced the regression is https://github.com/rails/rails/pull/25976\r\n\r\nThen I tried to reproduce the issue so I could open a PR to fix it and that took me a long time and I still can not explain why the `ActiveRecord::StatementInvalid` is happening because the issue gets weirder hahaha. I could fix the issue on my side when I read http://api.rubyonrails.org/classes/ActiveRecord/AutosaveAssociation.html and specifically `Placing your callbacks after associations is usually a good practice.`\r\n\r\nI'll tell you what I've found out and let the experts try to solve it. Check the test case example first, please https://gist.github.com/yukideluxe/36b4092748310bc8ec020f5e4dad8ea9\r\n\r\n1. This happens only when the callbacks are specified before the `has_many` association and when we try to autosave associated records.\r\n2. In the test case, the error is raised when running the `after_touch` callback but only if the `after_create` has been also run.  In the `after_create` the SQL query is ```SELECT MIN(`comments`.`id`) FROM `comments` WHERE `comments`.`post_id` IS NULL``` I would understand this for the `before_create` but in the `after_create` we already have a `post_id` 😮 \r\n3. `bound_attributes` of the `comments` association for `ActiveRecord::Associations::CollectionProxy` and its scope `ActiveRecord::AssociationRelation` are empty but I've seen that for associations they should have the `foreign_key` of the relation (maybe not related but just saying... you cannot imagine how much I've debugged here 😂)\r\n4. It does not happen using `sqlite`!!! All the queries look as expected.\r\n\r\nMy first idea about how to fix this was just reverting this https://github.com/rails/rails/blob/master/activerecord/lib/active_record/associations/collection_proxy.rb#L753-L755 because if doesn't save any call which was the idea of introducing that lines in the first place but I prefer you too have a look in case this is a more serious issue or not issue at all ✌️ \r\n\r\nIn my opinion, even if the callbacks are run before the autosave callbacks and the results we get are not the expected ones, the SQL query should be valid? What do you think?\r\n\r\n### Steps to reproduce it\r\n\r\nRun this test case https://gist.github.com/yukideluxe/36b4092748310bc8ec020f5e4dad8ea9\r\n\r\n#### Using sqlite \r\n`ruby test_case.rb` \r\n\r\nNo exception\r\n\r\n#### Using mysql2\r\n`ARCONN=mysql2 ruby test_case.rb`\r\n\r\nRaises the exception\r\n```\r\nActiveRecord::StatementInvalid: Mysql2::Error: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near '' at line 1: SELECT MIN(`comments`.`id`) FROM `comments` WHERE `comments`.`post_id` =\r\n```\r\n\r\n#### Using postgresql\r\n`ARCONN=postgresql ruby test_case.rb`\r\n\r\nRaises the exception\r\n```\r\nActiveRecord::StatementInvalid: PG::ProtocolViolation: ERROR:  bind message supplies 0 parameters, but prepared statement \"\" requires 1\r\n: SELECT MIN(\"comments\".\"id\") FROM \"comments\" WHERE \"comments\".\"post_id\" = $1\r\n```\r\n\r\nThis issue is also happening in the master branch, you can check that out here https://github.com/rails/rails/compare/master...yukideluxe:callbacks-calculation-bug\r\n\r\nSorry for the long post, I didn't want to miss anything! I hope I explained myself. If you have any questions, let me know! ❤️ "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27581",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27581/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27581/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27581/events",
    "html_url": "https://github.com/rails/rails/issues/27581",
    "id": 198955439,
    "number": 27581,
    "title": "Deferred fixture enrolment causes over-eager connection",
    "user": {
      "login": "matthewd",
      "id": 1034,
      "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewd",
      "html_url": "https://github.com/matthewd",
      "followers_url": "https://api.github.com/users/matthewd/followers",
      "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewd/orgs",
      "repos_url": "https://api.github.com/users/matthewd/repos",
      "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 149514554,
        "url": "https://api.github.com/repos/rails/rails/labels/pinned",
        "name": "pinned",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      {
        "login": "arthurnn",
        "id": 833383,
        "avatar_url": "https://avatars.githubusercontent.com/u/833383?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/arthurnn",
        "html_url": "https://github.com/arthurnn",
        "followers_url": "https://api.github.com/users/arthurnn/followers",
        "following_url": "https://api.github.com/users/arthurnn/following{/other_user}",
        "gists_url": "https://api.github.com/users/arthurnn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/arthurnn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/arthurnn/subscriptions",
        "organizations_url": "https://api.github.com/users/arthurnn/orgs",
        "repos_url": "https://api.github.com/users/arthurnn/repos",
        "events_url": "https://api.github.com/users/arthurnn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/arthurnn/received_events",
        "type": "User",
        "site_admin": true
      }
    ],
    "milestone": {
      "url": "https://api.github.com/repos/rails/rails/milestones/49",
      "html_url": "https://github.com/rails/rails/milestone/49",
      "labels_url": "https://api.github.com/repos/rails/rails/milestones/49/labels",
      "id": 1601639,
      "number": 49,
      "title": "5.1.0",
      "description": "",
      "creator": {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      },
      "open_issues": 16,
      "closed_issues": 24,
      "state": "open",
      "created_at": "2016-02-24T03:19:34Z",
      "updated_at": "2017-01-06T09:48:36Z",
      "due_on": null,
      "closed_at": null
    },
    "comments": 2,
    "created_at": "2017-01-05T13:26:42Z",
    "updated_at": "2017-01-06T16:53:27Z",
    "closed_at": null,
    "body": "#20818 aimed to ensure we consistently apply ~fixture~ transactions to all future connections, as well as the ones that already exist during test setup.\r\n\r\nBut it seems to conflate the creation of the pool and the creation of the actual connections, causing an immediate connection as soon as a pool is configured -- plus missing other connections that could be established.\r\n\r\nUsing some mechanism, like the notification, to notice when a new pool is configured is a good plan -- but the reaction should be to enlist said pool in *future* transaction management of its actual connections, as & when they get created and/or checked out.\r\n\r\nI think we should likewise enlist the existing pools, instead of forcefully connecting them, too.\r\n\r\ncc @rafaelfranca @arthurnn "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27577",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27577/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27577/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27577/events",
    "html_url": "https://github.com/rails/rails/pull/27577",
    "id": 198865914,
    "number": 27577,
    "title": "Action Cable owns database connection, not Active Record",
    "user": {
      "login": "maclover7",
      "id": 3020626,
      "avatar_url": "https://avatars.githubusercontent.com/u/3020626?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maclover7",
      "html_url": "https://github.com/maclover7",
      "followers_url": "https://api.github.com/users/maclover7/followers",
      "following_url": "https://api.github.com/users/maclover7/following{/other_user}",
      "gists_url": "https://api.github.com/users/maclover7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maclover7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maclover7/subscriptions",
      "organizations_url": "https://api.github.com/users/maclover7/orgs",
      "repos_url": "https://api.github.com/users/maclover7/repos",
      "events_url": "https://api.github.com/users/maclover7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maclover7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 300028327,
        "url": "https://api.github.com/repos/rails/rails/labels/actioncable",
        "name": "actioncable",
        "color": "bfdadc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "matthewd",
      "id": 1034,
      "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewd",
      "html_url": "https://github.com/matthewd",
      "followers_url": "https://api.github.com/users/matthewd/followers",
      "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewd/orgs",
      "repos_url": "https://api.github.com/users/matthewd/repos",
      "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewd/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "matthewd",
        "id": 1034,
        "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/matthewd",
        "html_url": "https://github.com/matthewd",
        "followers_url": "https://api.github.com/users/matthewd/followers",
        "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
        "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
        "organizations_url": "https://api.github.com/users/matthewd/orgs",
        "repos_url": "https://api.github.com/users/matthewd/repos",
        "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/matthewd/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2017-01-05T03:03:54Z",
    "updated_at": "2017-01-06T00:31:30Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27577",
      "html_url": "https://github.com/rails/rails/pull/27577",
      "diff_url": "https://github.com/rails/rails/pull/27577.diff",
      "patch_url": "https://github.com/rails/rails/pull/27577.patch"
    },
    "body": "### Summary\r\n\r\nBefore this commit, the database connection used in Action Cable's\r\nPostgreSQL adapter was \"owned\" by `ActiveRecord::Base.connection_pool`.\r\nThis meant that if, for example, `#clear_reloadable_connections!` was called on the pool, Active\r\nRecord would \"steal\" the database connection from Action Cable, and\r\nwould cause all sorts of issues. This became evident during file\r\nreloads; despite Action Cable trying its hardest to return its borrowed\r\ndatabase connection to Active Record via `@pubsub.shutdown`, Active Record calls\r\n`#clear_reloadable_connections!` on the connection pool, and due to the order of callbacks, Active\r\nRecord's callback was being executed first. This meant that if you tried\r\nto rerender a view after a file was reloaded, you would have to wait\r\nthrough Active Record's timeout and such.\r\n\r\nNow, Action Cable takes direct ownership of the database connection it\r\nuses. It removes the connection from the pool to avoid the situation\r\ndescribed above. Action Cable also makes sure to call `#disconnect!` on\r\nthe connection when appropriate, to match the previous behavior of\r\nActive Record.\r\n\r\nFixes #27547.\r\n\r\nr? @matthewd "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27572",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27572/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27572/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27572/events",
    "html_url": "https://github.com/rails/rails/pull/27572",
    "id": 198769412,
    "number": 27572,
    "title": "Simplify the version specifier generated by prereleases",
    "user": {
      "login": "matthewd",
      "id": 1034,
      "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewd",
      "html_url": "https://github.com/matthewd",
      "followers_url": "https://api.github.com/users/matthewd/followers",
      "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewd/orgs",
      "repos_url": "https://api.github.com/users/matthewd/repos",
      "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107195,
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-04T17:51:46Z",
    "updated_at": "2017-01-04T20:05:21Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27572",
      "html_url": "https://github.com/rails/rails/pull/27572",
      "diff_url": "https://github.com/rails/rails/pull/27572.diff",
      "patch_url": "https://github.com/rails/rails/pull/27572.patch"
    },
    "body": "\"~> 1.2.3.pre4\" will automatically allow \"1.2.4\" -- no need for an explicit range.\r\n\r\nI was being needlessly complicated in #22657. This changes the string we output, but not the set of versions it permits.\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27570",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27570/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27570/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27570/events",
    "html_url": "https://github.com/rails/rails/issues/27570",
    "id": 198724545,
    "number": 27570,
    "title": "ActiveRecord::Relation#cache_key returns same key for different records with hm:t association",
    "user": {
      "login": "javan",
      "id": 5355,
      "avatar_url": "https://avatars.githubusercontent.com/u/5355?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/javan",
      "html_url": "https://github.com/javan",
      "followers_url": "https://api.github.com/users/javan/followers",
      "following_url": "https://api.github.com/users/javan/following{/other_user}",
      "gists_url": "https://api.github.com/users/javan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/javan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/javan/subscriptions",
      "organizations_url": "https://api.github.com/users/javan/orgs",
      "repos_url": "https://api.github.com/users/javan/repos",
      "events_url": "https://api.github.com/users/javan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/javan/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2017-01-04T14:49:24Z",
    "updated_at": "2017-01-04T14:49:24Z",
    "closed_at": null,
    "body": "`has_many :through` relations that return the same number of records and one common record with the max `updated_at` will generate the same `cache_key`. For example:\r\n\r\n```ruby\r\nclass Access < ActiveRecord::Base; end\r\nclass Person < ActiveRecord::Base; end\r\nclass Bucket < ActiveRecord::Base\r\n  has_many :people, through: :accesses\r\nend\r\n```\r\n\r\n```ruby\r\n>> bucket.people.map(&:name)\r\n=> [\"Victor Cooper\", \"Jared Davis\"]\r\n\r\n>> bucket.people.cache_key\r\n=> \"people/query-2343a4c885c823c01ef9c2eb358b73eb-2-20161229150259317823\"\r\n```\r\n\r\nAbove, Victor Cooper has the max `updated_at` (`20161229150259317823`). If we remove Jared Davis and add a new person who's `updated_at` is less than Victor's, we'll get the same `cache_key`:\r\n\r\n```ruby\r\n>> bucket.reload.people.map(&:name)\r\n=> [\"Victor Cooper\", \"Amy Rivera\"]\r\n\r\n>> bucket.people.cache_key\r\n=> \"people/query-2343a4c885c823c01ef9c2eb358b73eb-2-20161229150259317823\"\r\n```\r\n\r\nThis was introduced in https://github.com/rails/rails/pull/20884. /cc @afcapel @sgrif  "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27567",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27567/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27567/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27567/events",
    "html_url": "https://github.com/rails/rails/issues/27567",
    "id": 198653427,
    "number": 27567,
    "title": "why not run destroy callbacks when updating assoication_ids ",
    "user": {
      "login": "hw676018683",
      "id": 8272538,
      "avatar_url": "https://avatars.githubusercontent.com/u/8272538?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hw676018683",
      "html_url": "https://github.com/hw676018683",
      "followers_url": "https://api.github.com/users/hw676018683/followers",
      "following_url": "https://api.github.com/users/hw676018683/following{/other_user}",
      "gists_url": "https://api.github.com/users/hw676018683/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hw676018683/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hw676018683/subscriptions",
      "organizations_url": "https://api.github.com/users/hw676018683/orgs",
      "repos_url": "https://api.github.com/users/hw676018683/repos",
      "events_url": "https://api.github.com/users/hw676018683/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hw676018683/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2017-01-04T08:27:28Z",
    "updated_at": "2017-01-06T01:33:51Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n```\r\nclass Tag < ActiveRecord::Base\r\n  has_many :taggings\r\nend\r\n\r\nclass Tagging < ActiveRecord::Base\r\n  belongs_to :tag\r\n  belongs_to :car\r\nend\r\n\r\nclass Car < ActiveRecord::Base\r\n  has_many :taggings\r\n  has_many :tags, through: :taggings\r\nend\r\n\r\nCar.first.update tag_ids: []\r\n# if create tagging, it will execute callbacks,\r\n# but if destroy tagging, it will not execute callbacks.\r\n```\r\n### System configuration\r\n**Rails version**: 5.0.1\r\n\r\n**Ruby version**: 2.3.1\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27565",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27565/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27565/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27565/events",
    "html_url": "https://github.com/rails/rails/issues/27565",
    "id": 198624771,
    "number": 27565,
    "title": "has_secure_token & token_was method incompatible with some callbacks",
    "user": {
      "login": "thenadz",
      "id": 1374212,
      "avatar_url": "https://avatars.githubusercontent.com/u/1374212?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thenadz",
      "html_url": "https://github.com/thenadz",
      "followers_url": "https://api.github.com/users/thenadz/followers",
      "following_url": "https://api.github.com/users/thenadz/following{/other_user}",
      "gists_url": "https://api.github.com/users/thenadz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thenadz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thenadz/subscriptions",
      "organizations_url": "https://api.github.com/users/thenadz/orgs",
      "repos_url": "https://api.github.com/users/thenadz/repos",
      "events_url": "https://api.github.com/users/thenadz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thenadz/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 6,
    "created_at": "2017-01-04T03:48:42Z",
    "updated_at": "2017-01-04T21:31:36Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\nDefine a model with a secure token and a before_validation hook that accesses token_was (maybe other `ActiveModel::Dirty` properties too). Create an instance of this model and attempt to save.\r\n\r\n```\r\nclass User < ActiveRecord::Base\r\n  has_secure_token\r\n  before_validation :do_something, if: Proc.new { |usr| usr.token.blank? || usr.token != usr.token_was }\r\n\r\n  def do_something\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\nSave should succeed.\r\n\r\n### Actual behavior\r\nStack overflow:\r\n```\r\nSystemStackError: stack level too deep\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/attribute.rb:44:in `original_value'\r\n... 10788 levels...\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/transactions.rb:395:in `block in with_transaction_returning_status'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/connection_adapters/abstract/database_statements.rb:232:in `block in transaction'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/connection_adapters/abstract/transaction.rb:189:in `within_new_transaction'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/connection_adapters/abstract/database_statements.rb:232:in `transaction'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/transactions.rb:211:in `transaction'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/transactions.rb:392:in `with_transaction_returning_status'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/transactions.rb:324:in `save!'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/activerecord-5.0.0.1/lib/active_record/suppressor.rb:45:in `save!'\r\n        from (irb):6\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/railties-5.0.0.1/lib/rails/commands/console.rb:65:in `start'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/railties-5.0.0.1/lib/rails/commands/console_helper.rb:9:in `start'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/railties-5.0.0.1/lib/rails/commands/commands_tasks.rb:78:in `console'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/railties-5.0.0.1/lib/rails/commands/commands_tasks.rb:49:in `run_command!'\r\n        from /home/rails/.rvm/gems/ruby-2.3.3/gems/railties-5.0.0.1/lib/rails/commands.rb:18:in `<top (required)>'\r\n        from bin/rails:4:in `require'\r\n        from bin/rails:4:in `<main>'\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.0.0.1\r\n\r\n**Ruby version**: 2.3.3\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27561",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27561/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27561/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27561/events",
    "html_url": "https://github.com/rails/rails/pull/27561",
    "id": 198605171,
    "number": 27561,
    "title": "Use `count(:all)` in HasManyAssociation#count_records",
    "user": {
      "login": "klaseskilson",
      "id": 1674076,
      "avatar_url": "https://avatars.githubusercontent.com/u/1674076?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/klaseskilson",
      "html_url": "https://github.com/klaseskilson",
      "followers_url": "https://api.github.com/users/klaseskilson/followers",
      "following_url": "https://api.github.com/users/klaseskilson/following{/other_user}",
      "gists_url": "https://api.github.com/users/klaseskilson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/klaseskilson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/klaseskilson/subscriptions",
      "organizations_url": "https://api.github.com/users/klaseskilson/orgs",
      "repos_url": "https://api.github.com/users/klaseskilson/repos",
      "events_url": "https://api.github.com/users/klaseskilson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/klaseskilson/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-01-04T00:40:04Z",
    "updated_at": "2017-01-06T09:36:10Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27561",
      "html_url": "https://github.com/rails/rails/pull/27561",
      "diff_url": "https://github.com/rails/rails/pull/27561.diff",
      "patch_url": "https://github.com/rails/rails/pull/27561.patch"
    },
    "body": "Problem: Calling `count` on an association can cause invalid SQL queries to be created where the `SELECT COUNT(a, b, c)` function receives multiple  columns. This will cause a `StatementInvalid` exception later on.\r\n\r\nSolution: Use `count(:all)`, which generates a `SELECT COUNT(*)...` query independently of the association.\r\n\r\nBackground: This appears to be previously an known problem, see https://github.com/rails/rails/issues/15138 and https://github.com/rails/rails/issues/13648.\r\n\r\nHit me with your feedback! 👍 "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27551",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27551/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27551/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27551/events",
    "html_url": "https://github.com/rails/rails/pull/27551",
    "id": 198500270,
    "number": 27551,
    "title": "Deprecate reflection class name to accept a class",
    "user": {
      "login": "kirs",
      "id": 522155,
      "avatar_url": "https://avatars.githubusercontent.com/u/522155?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kirs",
      "html_url": "https://github.com/kirs",
      "followers_url": "https://api.github.com/users/kirs/followers",
      "following_url": "https://api.github.com/users/kirs/following{/other_user}",
      "gists_url": "https://api.github.com/users/kirs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kirs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kirs/subscriptions",
      "organizations_url": "https://api.github.com/users/kirs/orgs",
      "repos_url": "https://api.github.com/users/kirs/repos",
      "events_url": "https://api.github.com/users/kirs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kirs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 257468118,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20work",
        "name": "needs work",
        "color": "000000",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2017-01-03T15:37:29Z",
    "updated_at": "2017-01-04T02:17:01Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27551",
      "html_url": "https://github.com/rails/rails/pull/27551",
      "diff_url": "https://github.com/rails/rails/pull/27551.diff",
      "patch_url": "https://github.com/rails/rails/pull/27551.patch"
    },
    "body": "The idea of `class_name` as an option of reflection is that passing a `String` of class name would allow us to lazy autoload the reflection class.\r\n\r\nPassing c class (`belongs_to :client, class_name: Customer`) is eagerloading more models than necessary and creating possible circular dependencies.\r\n\r\n@rafaelfranca @casperisfine"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27547",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27547/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27547/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27547/events",
    "html_url": "https://github.com/rails/rails/issues/27547",
    "id": 198407221,
    "number": 27547,
    "title": "Postgresql Action Cable connection adapter breaks code-reloading in development",
    "user": {
      "login": "mcolyer",
      "id": 1424,
      "avatar_url": "https://avatars.githubusercontent.com/u/1424?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mcolyer",
      "html_url": "https://github.com/mcolyer",
      "followers_url": "https://api.github.com/users/mcolyer/followers",
      "following_url": "https://api.github.com/users/mcolyer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mcolyer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mcolyer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mcolyer/subscriptions",
      "organizations_url": "https://api.github.com/users/mcolyer/orgs",
      "repos_url": "https://api.github.com/users/mcolyer/repos",
      "events_url": "https://api.github.com/users/mcolyer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mcolyer/received_events",
      "type": "User",
      "site_admin": true
    },
    "labels": [
      {
        "id": 300028327,
        "url": "https://api.github.com/repos/rails/rails/labels/actioncable",
        "name": "actioncable",
        "color": "bfdadc",
        "default": false
      },
      {
        "id": 41328116,
        "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
        "name": "attached PR",
        "color": "006b75",
        "default": false
      },
      {
        "id": 126910270,
        "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
        "name": "With reproduction steps",
        "color": "009800",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "maclover7",
      "id": 3020626,
      "avatar_url": "https://avatars.githubusercontent.com/u/3020626?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maclover7",
      "html_url": "https://github.com/maclover7",
      "followers_url": "https://api.github.com/users/maclover7/followers",
      "following_url": "https://api.github.com/users/maclover7/following{/other_user}",
      "gists_url": "https://api.github.com/users/maclover7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maclover7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maclover7/subscriptions",
      "organizations_url": "https://api.github.com/users/maclover7/orgs",
      "repos_url": "https://api.github.com/users/maclover7/repos",
      "events_url": "https://api.github.com/users/maclover7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maclover7/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "maclover7",
        "id": 3020626,
        "avatar_url": "https://avatars.githubusercontent.com/u/3020626?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/maclover7",
        "html_url": "https://github.com/maclover7",
        "followers_url": "https://api.github.com/users/maclover7/followers",
        "following_url": "https://api.github.com/users/maclover7/following{/other_user}",
        "gists_url": "https://api.github.com/users/maclover7/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/maclover7/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/maclover7/subscriptions",
        "organizations_url": "https://api.github.com/users/maclover7/orgs",
        "repos_url": "https://api.github.com/users/maclover7/repos",
        "events_url": "https://api.github.com/users/maclover7/events{/privacy}",
        "received_events_url": "https://api.github.com/users/maclover7/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2017-01-03T04:04:55Z",
    "updated_at": "2017-01-05T03:04:28Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n\r\nInitial state:\r\n1. Create a `Widget` model.\r\n1. Create an Action Cable channel which is loaded on the root url.\r\n1. Configure the Postgres adapter for Action Cable in development.\r\n\r\nI've created a minimal application with a minimal configuration [here](https://github.com/mcolyer/actioncable-postgres-issue) .\r\n\r\nOnce the application is running:\r\n1. Load the root url (\"/\") in a browser.\r\n1. Restart the server and wait for the websocket to re-connect.\r\n1. Edit the `Widget` model file to require code-reloading.\r\n1. Reload the root url in the browser\r\n\r\nI've added some debug logging to illustrate how many AR connections are used at a given time as well as the backtraces when they are checked out. \r\n\r\nBased on my investigation so far I'm guessing that the reloading code isn't expecting a long lived database connection (from the postgresql connection adapter) to be running.\r\n\r\n### Expected behavior\r\nCode reloading works as it normally does.\r\n\r\n### Actual behavior\r\nIt hangs (and sometimes deadlocks the process)\r\n\r\n### System configuration\r\n**Rails version**: 5.0.1\r\n\r\n**Ruby version**: 2.3.1\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27516",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27516/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27516/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27516/events",
    "html_url": "https://github.com/rails/rails/issues/27516",
    "id": 198197870,
    "number": 27516,
    "title": "Rails Guides Active Record Associations Conflicting Information",
    "user": {
      "login": "davidsherline",
      "id": 4708681,
      "avatar_url": "https://avatars.githubusercontent.com/u/4708681?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/davidsherline",
      "html_url": "https://github.com/davidsherline",
      "followers_url": "https://api.github.com/users/davidsherline/followers",
      "following_url": "https://api.github.com/users/davidsherline/following{/other_user}",
      "gists_url": "https://api.github.com/users/davidsherline/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/davidsherline/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/davidsherline/subscriptions",
      "organizations_url": "https://api.github.com/users/davidsherline/orgs",
      "repos_url": "https://api.github.com/users/davidsherline/repos",
      "events_url": "https://api.github.com/users/davidsherline/events{/privacy}",
      "received_events_url": "https://api.github.com/users/davidsherline/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 41328116,
        "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
        "name": "attached PR",
        "color": "006b75",
        "default": false
      },
      {
        "id": 150377,
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-30T21:43:35Z",
    "updated_at": "2017-01-01T19:36:22Z",
    "closed_at": null,
    "body": "In the Active Record Associations page of the Rails Guides, section [3.5 Bi-directional Associations](http://guides.rubyonrails.org/association_basics.html#bi-directional-associations), it appears there is conflicting information.\r\n\r\nFirst, the section states that given two models, one with a `belongs_to` and another with a `has_many`, ActiveRecord will not know about the connection between the two. The example shows an instantiation of each, and the two getting out of sync. This is resolved by calling `:inverse_of` on both sides of the association.\r\n\r\nHowever, a few paragraphs later, the section states that, \"For belongs_to associations, has_many inverse associations are ignored.\" If that's true, why is `:inverse_of` called on both sides of the association in the example?\r\n\r\nMoreover, the section further states, \"Every association will attempt to automatically find the inverse association and set the :inverse_of option heuristically (based on the association name).\" Indeed, setting up the associations in the example mentioned above yields a single object in memory without the `:inverse_of` call required.\r\n\r\nIt seems, then, that ActiveRecord _will_ know about the connection between two well-named models without `:inverse_of`, even though the section states otherwise. This seemingly conflict of information within the section will likely lead to confusion amongst readers new to Rails.\r\n\r\nThanks!\r\n\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27494",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27494/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27494/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27494/events",
    "html_url": "https://github.com/rails/rails/pull/27494",
    "id": 197992968,
    "number": 27494,
    "title": "Start on a guide for the Executor & Load Interlock",
    "user": {
      "login": "matthewd",
      "id": 1034,
      "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewd",
      "html_url": "https://github.com/matthewd",
      "followers_url": "https://api.github.com/users/matthewd/followers",
      "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewd/orgs",
      "repos_url": "https://api.github.com/users/matthewd/repos",
      "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewd/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      },
      {
        "id": 150377,
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-29T11:26:39Z",
    "updated_at": "2016-12-30T04:36:41Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27494",
      "html_url": "https://github.com/rails/rails/pull/27494",
      "diff_url": "https://github.com/rails/rails/pull/27494.diff",
      "patch_url": "https://github.com/rails/rails/pull/27494.patch"
    },
    "body": ""
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27484",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27484/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27484/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27484/events",
    "html_url": "https://github.com/rails/rails/pull/27484",
    "id": 197903570,
    "number": 27484,
    "title": "Add 'failed' notification about the connection failed event of WebSocket",
    "user": {
      "login": "ninjarhyme",
      "id": 4303705,
      "avatar_url": "https://avatars.githubusercontent.com/u/4303705?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ninjarhyme",
      "html_url": "https://github.com/ninjarhyme",
      "followers_url": "https://api.github.com/users/ninjarhyme/followers",
      "following_url": "https://api.github.com/users/ninjarhyme/following{/other_user}",
      "gists_url": "https://api.github.com/users/ninjarhyme/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ninjarhyme/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ninjarhyme/subscriptions",
      "organizations_url": "https://api.github.com/users/ninjarhyme/orgs",
      "repos_url": "https://api.github.com/users/ninjarhyme/repos",
      "events_url": "https://api.github.com/users/ninjarhyme/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ninjarhyme/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 300028327,
        "url": "https://api.github.com/repos/rails/rails/labels/actioncable",
        "name": "actioncable",
        "color": "bfdadc",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "matthewd",
      "id": 1034,
      "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewd",
      "html_url": "https://github.com/matthewd",
      "followers_url": "https://api.github.com/users/matthewd/followers",
      "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewd/orgs",
      "repos_url": "https://api.github.com/users/matthewd/repos",
      "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewd/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "matthewd",
        "id": 1034,
        "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/matthewd",
        "html_url": "https://github.com/matthewd",
        "followers_url": "https://api.github.com/users/matthewd/followers",
        "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
        "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
        "organizations_url": "https://api.github.com/users/matthewd/orgs",
        "repos_url": "https://api.github.com/users/matthewd/repos",
        "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/matthewd/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-28T19:25:48Z",
    "updated_at": "2016-12-29T14:58:44Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27484",
      "html_url": "https://github.com/rails/rails/pull/27484",
      "diff_url": "https://github.com/rails/rails/pull/27484.diff",
      "patch_url": "https://github.com/rails/rails/pull/27484.patch"
    },
    "body": "There is no way to know if the WebSocket connection that created by ActionCable is aborted before connected."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27480",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27480/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27480/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27480/events",
    "html_url": "https://github.com/rails/rails/issues/27480",
    "id": 197861703,
    "number": 27480,
    "title": "Regression in render_to_string from 5.0.0.1 to 5.0.1 when passing instance variables to :locals?",
    "user": {
      "login": "rosenfeld",
      "id": 32246,
      "avatar_url": "https://avatars.githubusercontent.com/u/32246?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rosenfeld",
      "html_url": "https://github.com/rosenfeld",
      "followers_url": "https://api.github.com/users/rosenfeld/followers",
      "following_url": "https://api.github.com/users/rosenfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/rosenfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rosenfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rosenfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/rosenfeld/orgs",
      "repos_url": "https://api.github.com/users/rosenfeld/repos",
      "events_url": "https://api.github.com/users/rosenfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rosenfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 3666649,
        "url": "https://api.github.com/repos/rails/rails/labels/actionview",
        "name": "actionview",
        "color": "d7e102",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      },
      {
        "id": 107186,
        "url": "https://api.github.com/repos/rails/rails/labels/regression",
        "name": "regression",
        "color": "e10c02",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 7,
    "created_at": "2016-12-28T14:29:16Z",
    "updated_at": "2017-01-04T12:49:45Z",
    "closed_at": null,
    "body": "Hi, I'm not sure whether this has been ever supported officially, but since it was suggested in a StackOverflow question, I was using this and maybe others too and that broke when I upgraded our Rails app:\r\n\r\nhttp://stackoverflow.com/a/37763478/557368\r\n\r\n```ruby\r\nrender_to_string(partial: \"partial\", formats: [:html], locals: { :@something => something }\r\n```\r\n\r\nI ended up fixing in our application by assigning `@something = something` before calling render_to_string, otherwise `@something` would be nil in the partial. Was this change intentional somehow? I'm just reporting in case it wasn't intentional for this patch release in case you wanted to handle this with proper warnings before removing the (maybe unintentional) support for instance variables through locals. Maybe render_to_string would support :assigns now instead of :locals for such cases, I haven't tested, but one wouldn't usually expect such breakage in a patch release, so I'm reporting in case you want to release 5.0.2 supporting applications using that trick and emit a deprecation warning in such cases.\r\n\r\nBest,\r\nRodrigo."
  }
]}
