{
"link": "<https://api.github.com/repositories/8514/issues?per_page=25&page=1>; rel=\"first\", <https://api.github.com/repositories/8514/issues?per_page=25&page=48>; rel=\"prev\"",
"data":
[
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8679",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8679/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8679/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8679/events",
    "html_url": "https://github.com/rails/rails/issues/8679",
    "id": 9606495,
    "number": 8679,
    "title": "assert_recognizes don't aware of constraints",
    "user": {
      "login": "mmontossi",
      "id": 1836781,
      "avatar_url": "https://avatars.githubusercontent.com/u/1836781?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mmontossi",
      "html_url": "https://github.com/mmontossi",
      "followers_url": "https://api.github.com/users/mmontossi/followers",
      "following_url": "https://api.github.com/users/mmontossi/following{/other_user}",
      "gists_url": "https://api.github.com/users/mmontossi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mmontossi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mmontossi/subscriptions",
      "organizations_url": "https://api.github.com/users/mmontossi/orgs",
      "repos_url": "https://api.github.com/users/mmontossi/repos",
      "events_url": "https://api.github.com/users/mmontossi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mmontossi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      },
      {
        "id": 41328116,
        "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
        "name": "attached PR",
        "color": "006b75",
        "default": false
      },
      {
        "id": 149514554,
        "url": "https://api.github.com/repos/rails/rails/labels/pinned",
        "name": "pinned",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 12,
    "created_at": "2013-01-01T22:48:56Z",
    "updated_at": "2016-04-20T21:02:10Z",
    "closed_at": null,
    "body": "I notice in the method recognized_request_for used in assert_recognizes that it's not aware of the constraints of a route, so will always trigger an RoutingError exception.\n\nhttps://github.com/rails/rails/blob/v3.2.9.rc3/actionpack/lib/action_dispatch/testing/assertions/routing.rb#L210\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8343",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8343/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8343/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8343/events",
    "html_url": "https://github.com/rails/rails/pull/8343",
    "id": 8742501,
    "number": 8343,
    "title": "Add Touch method to ActiveRelation",
    "user": {
      "login": "duggiefresh",
      "id": 1206678,
      "avatar_url": "https://avatars.githubusercontent.com/u/1206678?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/duggiefresh",
      "html_url": "https://github.com/duggiefresh",
      "followers_url": "https://api.github.com/users/duggiefresh/followers",
      "following_url": "https://api.github.com/users/duggiefresh/following{/other_user}",
      "gists_url": "https://api.github.com/users/duggiefresh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/duggiefresh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/duggiefresh/subscriptions",
      "organizations_url": "https://api.github.com/users/duggiefresh/orgs",
      "repos_url": "https://api.github.com/users/duggiefresh/repos",
      "events_url": "https://api.github.com/users/duggiefresh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/duggiefresh/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 20,
    "created_at": "2012-11-27T23:29:13Z",
    "updated_at": "2016-06-16T18:58:52Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/8343",
      "html_url": "https://github.com/rails/rails/pull/8343",
      "diff_url": "https://github.com/rails/rails/pull/8343.diff",
      "patch_url": "https://github.com/rails/rails/pull/8343.patch"
    },
    "body": "This allows for more efficient touching of many records\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8294",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8294/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8294/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8294/events",
    "html_url": "https://github.com/rails/rails/issues/8294",
    "id": 8561022,
    "number": 8294,
    "title": "assert_routing does not work for mounts",
    "user": {
      "login": "jmazzi",
      "id": 2273,
      "avatar_url": "https://avatars.githubusercontent.com/u/2273?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmazzi",
      "html_url": "https://github.com/jmazzi",
      "followers_url": "https://api.github.com/users/jmazzi/followers",
      "following_url": "https://api.github.com/users/jmazzi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmazzi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmazzi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmazzi/subscriptions",
      "organizations_url": "https://api.github.com/users/jmazzi/orgs",
      "repos_url": "https://api.github.com/users/jmazzi/repos",
      "events_url": "https://api.github.com/users/jmazzi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmazzi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      },
      {
        "id": 41328116,
        "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
        "name": "attached PR",
        "color": "006b75",
        "default": false
      },
      {
        "id": 149514554,
        "url": "https://api.github.com/repos/rails/rails/labels/pinned",
        "name": "pinned",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2012-11-21T22:34:37Z",
    "updated_at": "2016-02-17T05:41:13Z",
    "closed_at": null,
    "body": "The following code causes the error \"No route matches /test\" on Rails 3.2.9. I don't think this is a 3.2.9 specific issue, tho.\n\nRoutes\n\n``` ruby\nRouteIssue::Application.routes.draw do\n  class RackApp\n    def call(env)\n      [200, {\"Content-Type\" => \"text/html\"}, [\"I'm Old Gregg\"]]\n    end\n  end\n\n  mount RackApp.new, at: \"/test\"\nend\n```\n\nTest\n\n``` ruby\nassert_routing \"/test\", { :controller => \"test\" }\n```\n\nIs there another way I should be testing mounts?\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8189",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8189/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8189/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8189/events",
    "html_url": "https://github.com/rails/rails/pull/8189",
    "id": 8296100,
    "number": 8189,
    "title": "Move multi-parameter attributes from ActiveRecord to ActiveModel",
    "user": {
      "login": "georgebrock",
      "id": 35861,
      "avatar_url": "https://avatars.githubusercontent.com/u/35861?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/georgebrock",
      "html_url": "https://github.com/georgebrock",
      "followers_url": "https://api.github.com/users/georgebrock/followers",
      "following_url": "https://api.github.com/users/georgebrock/following{/other_user}",
      "gists_url": "https://api.github.com/users/georgebrock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/georgebrock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/georgebrock/subscriptions",
      "organizations_url": "https://api.github.com/users/georgebrock/orgs",
      "repos_url": "https://api.github.com/users/georgebrock/repos",
      "events_url": "https://api.github.com/users/georgebrock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/georgebrock/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      },
      {
        "id": 107190,
        "url": "https://api.github.com/repos/rails/rails/labels/activemodel",
        "name": "activemodel",
        "color": "00E5FF",
        "default": false
      },
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": true,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 31,
    "created_at": "2012-11-12T17:19:01Z",
    "updated_at": "2014-09-03T02:57:52Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/8189",
      "html_url": "https://github.com/rails/rails/pull/8189",
      "diff_url": "https://github.com/rails/rails/pull/8189.diff",
      "patch_url": "https://github.com/rails/rails/pull/8189.patch"
    },
    "body": "Multi-parameter attributes (used to build a complex type like a `Date` from several simple values that can be easily POSTed) are currently implemented in `ActiveRecord::AttributeAssignment`. This is pretty frustrating if you're trying to use an `ActiveModel::Model` with `Date` or `DateTime` fields.\n\nI've fixed this by moving multi-parameter conversion to the `ActionController::Parameters` class, so it happens before the value hits the model. IMO the model layer shouldn't need to be aware of the format that's used to pass the data from the client to the server.\n\nTo support this the type that the values should be re-assembled into is included in the form (e.g. `<input type=\"hidden\" name=\"my_model[created_at(type)]\" value=\"Date\">`) instead of being determined from the model schema.\n\nThe main aim was to get multi-parameter attributes working with `ActiveModel`, but a nice side effect of this implementation is that it becomes very easy to register custom types. For example, you could easily submit an amount of money as a currency and an amount and have it converted to your own custom `Money` class:\n\n```\n    # In an initializer somewhere:\n    ActionController::MultiParameterConverter.register_type('Money') { |currency, amount|\n      Money.new(currency, amount)\n    }\n\n    # View:\n    <input type=\"text\" name=\"my_model[price(1)]\" value=\"$\">\n    <input type=\"text\" name=\"my_model[price(2f)]\" value=\"50.00\">\n    <input type=\"hidden\" name=\"my_model[price(type)]\" value=\"Money\">\n```\n\nThis isn't a finished implementation yet. It needs documentation, and the `ActiveRecord` implementation needs to be deprecated or removed. I've added multi-parameter support to `ActionController` and updated the `date_select`, `datetime_select` and `time_select` helpers to use the new implementation. I figured this was far enough to get some feedback.\n\n---\n\n**Edit:** Renamed from _Move multi-parameter attributes from ActiveRecord to ActionController_ to _Move multi-parameter attributes from ActiveRecord to ActiveModel_ to reflect the current state of the change.\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/8103",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/8103/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/8103/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/8103/events",
    "html_url": "https://github.com/rails/rails/issues/8103",
    "id": 8063875,
    "number": 8103,
    "title": "Limit replaces select clause when used with having",
    "user": {
      "login": "wb-lifebooker",
      "id": 798786,
      "avatar_url": "https://avatars.githubusercontent.com/u/798786?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wb-lifebooker",
      "html_url": "https://github.com/wb-lifebooker",
      "followers_url": "https://api.github.com/users/wb-lifebooker/followers",
      "following_url": "https://api.github.com/users/wb-lifebooker/following{/other_user}",
      "gists_url": "https://api.github.com/users/wb-lifebooker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wb-lifebooker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wb-lifebooker/subscriptions",
      "organizations_url": "https://api.github.com/users/wb-lifebooker/orgs",
      "repos_url": "https://api.github.com/users/wb-lifebooker/repos",
      "events_url": "https://api.github.com/users/wb-lifebooker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wb-lifebooker/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 41328116,
        "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
        "name": "attached PR",
        "color": "006b75",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2012-11-02T16:38:07Z",
    "updated_at": "2016-07-30T21:35:22Z",
    "closed_at": null,
    "body": "Practical Problem:\n`Thing.group(\"things.id, other_things.id\").having(\"other_things.id = 1\").\n                        includes(:other_things).count`\nvs\n`Thing.group(\"things.id, other_things.id\").having(\"other_things.id = 1\").\n                    includes(:other_things).limit(1)`\n\nEasy way to reproduce it:\n\n`Thing.select(\"b\").group(\"things.id\").having(\"other_things.id = 1\").includes(:other_things).limit(1)`\n\n`SELECT DISTINCT `things`.id FROM `things` LEFT OUTER JOIN `other_things` ON `other_things`.`thing_id` = `things`.`id` ...`\n\nthe select clause is completely replaced\n\n`Thing.select(\"b\").group(\"things.id\").having(\"other_things.id = 1\").includes(:other_things).count`\n\n`SELECT COUNT(DISTINCT b) AS count_b, b, things.id AS things_id FROM `things` \nLEFT OUTER JOIN `other_things` ON `other_things`.`thing_id` = `things`.`id` GROUP BY things.id \nHAVING other_things.id = 1`\n\n---\n\n.count has the correct behavior, and leaves the extra columns in the select clause. .limit() replaces the select clause and breaks the query.\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/7584",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/7584/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/7584/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/7584/events",
    "html_url": "https://github.com/rails/rails/pull/7584",
    "id": 6752275,
    "number": 7584,
    "title": "partitioning updates working",
    "user": {
      "login": "keithgabryelski",
      "id": 884378,
      "avatar_url": "https://avatars.githubusercontent.com/u/884378?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/keithgabryelski",
      "html_url": "https://github.com/keithgabryelski",
      "followers_url": "https://api.github.com/users/keithgabryelski/followers",
      "following_url": "https://api.github.com/users/keithgabryelski/following{/other_user}",
      "gists_url": "https://api.github.com/users/keithgabryelski/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/keithgabryelski/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/keithgabryelski/subscriptions",
      "organizations_url": "https://api.github.com/users/keithgabryelski/orgs",
      "repos_url": "https://api.github.com/users/keithgabryelski/repos",
      "events_url": "https://api.github.com/users/keithgabryelski/events{/privacy}",
      "received_events_url": "https://api.github.com/users/keithgabryelski/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 70310659,
        "url": "https://api.github.com/repos/rails/rails/labels/PostgreSQL",
        "name": "PostgreSQL",
        "color": "fbca04",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 14,
    "created_at": "2012-09-10T02:29:33Z",
    "updated_at": "2015-10-20T21:07:29Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/7584",
      "html_url": "https://github.com/rails/rails/pull/7584",
      "diff_url": "https://github.com/rails/rails/pull/7584.diff",
      "patch_url": "https://github.com/rails/rails/pull/7584.patch"
    },
    "body": "basic work for supporting partitioned tables in postgresql\n\nthese changes are associated with this pull request: https://github.com/rails/rails/pull/7573\nwhich were changes associated with rails 3.2.8.\n\nIf I were to sum up the work, it would be:\n- provide an instance method arel_table used for any operation that has access to the instance should use the instance method to acquire an arel_table associated with the current models attributes.\n- alter class method arel_table to handle parameters, with no parameters do original work -- with parameters associate the table with the specific partitioned table determined by key attributes\n- provide methods to manage key attributes and values (these are the fields the db table is partitioned on)\n- provide an instance method table_name which calls the altered class method table_name which now takes attribute values that should determine the specific partitioned table to name\n- bunch of helper methods in postgresql connection area associated with schema management.  this is for reasons 1) create_schema seems like a useful method, 2) adding foreign key is needed because in postgres child partitions need to manage the foreign key references, 3) some sequence method changes to support tables in non-public (well non search path) schema: this is probably generally useful work as rails seems broken about non-public schemas\n- change any self.class.arel_table to self.arel_table\n- create is a little weird because it needs to acquire the primary key if it isn't supplied (for instance ID where your need to fetch from the sequence -- for this work to be complete we need to supply the model instance method \"prefetch_primary_key?\" instead of it being on connection since prefetching isn't needed for any tables that aren't partitioned by a primary key)\n- some helper methods for finds (from_partition(*x)) which we've found useful in our day to day coding.  this method just sets the table name (this is useful because find from the parent table even when partition keys are provided can take an inordinate time if the number of child tables is large -- so specifying the specific child table is useful).\n\nthe rest of the code to support partitioning is here: https://github.com/fiksu/partitioned/tree/rails-3-2-8-patching -- you'll need to pull from that branch (which doesn't try to patch rails -- so use it with this pull request).  the master branch patches rails 3.2.8 correctly -- you can use it on your own.  The current rubygem of partitioned patches rails in a different (and more conservative way) -- I don't think you should look at that code.\n\nYou could probably remove a bunch of stuff to make this code faster for the common non-partitioned case.\n- instance arel_table could just call class method arel_table\n- self.class.arel_table could just do the old work\n- instance table_name could just call class method table_name which did just the old work\n\nthen one might provide fixups for those methods for models where partitioning is desired.\n\nI think the ugliest part of this code is update -- although I haven't walked down this path, it would seem the best way to manage this would be to add a hook to attribute modifications and fix up the all arel_tables that the attributes point to if the partitioned key values changes\n\nI'm willing to help in any way that makes sense to support partitioning in a future rails version.\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/7245",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/7245/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/7245/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/7245/events",
    "html_url": "https://github.com/rails/rails/issues/7245",
    "id": 6006282,
    "number": 7245,
    "title": "Inconsistent output from ActiveSupport::TimeZone.all",
    "user": {
      "login": "wonnage",
      "id": 125177,
      "avatar_url": "https://avatars.githubusercontent.com/u/125177?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wonnage",
      "html_url": "https://github.com/wonnage",
      "followers_url": "https://api.github.com/users/wonnage/followers",
      "following_url": "https://api.github.com/users/wonnage/following{/other_user}",
      "gists_url": "https://api.github.com/users/wonnage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wonnage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wonnage/subscriptions",
      "organizations_url": "https://api.github.com/users/wonnage/orgs",
      "repos_url": "https://api.github.com/users/wonnage/repos",
      "events_url": "https://api.github.com/users/wonnage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wonnage/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      },
      {
        "id": 149514554,
        "url": "https://api.github.com/repos/rails/rails/labels/pinned",
        "name": "pinned",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 17,
    "created_at": "2012-08-03T01:20:57Z",
    "updated_at": "2015-03-04T16:25:50Z",
    "closed_at": null,
    "body": "Due to caching, `ActiveSupport::TimeZone.all` returns different results if a non-ActiveSupport-supported zone was looked up first. \n\n```\nActiveSupport::TimeZone.all\n# not in ActiveSupport::TimeZone::MAPPING, but still a valid zone\nchicago = ActiveSupport::TimeZone['America/Chicago']\nActiveSupport::TimeZone.all.include?(chicago)\n=> false\n```\n\n```\nchicago = ActiveSupport::TimeZone['America/Chicago']\nActiveSupport::TimeZone.all.include?(chicago)\n=> true\n```\n\nThis affects `time_zone_options_for_select`, in that the `selected` arg of that function is a string matched to the names of zones in `ActiveSupport::TimeZone.all`. If your app stores timezones in TZInfo format, the helper may not generate an option tag for a recognized zone.\n\nI see two ways around this:\n1. Change the helper to recognize TZInfo identifiers\n2. Update the zones cache when lazy-loading time zones.\n\nChanging the helper might unintentionally change your data (\"America/Chicago\" would get converted to \"Central Time\"). It seems like Rails is opinionated about what zones it wants to use, so that might not be a big deal. The second approach avoids that problem, but still requires you to look up the alternate zone before it shows up in the list.\n\nThoughts?\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/7218",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/7218/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/7218/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/7218/events",
    "html_url": "https://github.com/rails/rails/issues/7218",
    "id": 5954214,
    "number": 7218,
    "title": "image_tag in ActionView::TestCase not respecting asset pipeline",
    "user": {
      "login": "Mandaryn",
      "id": 71698,
      "avatar_url": "https://avatars.githubusercontent.com/u/71698?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Mandaryn",
      "html_url": "https://github.com/Mandaryn",
      "followers_url": "https://api.github.com/users/Mandaryn/followers",
      "following_url": "https://api.github.com/users/Mandaryn/following{/other_user}",
      "gists_url": "https://api.github.com/users/Mandaryn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Mandaryn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Mandaryn/subscriptions",
      "organizations_url": "https://api.github.com/users/Mandaryn/orgs",
      "repos_url": "https://api.github.com/users/Mandaryn/repos",
      "events_url": "https://api.github.com/users/Mandaryn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Mandaryn/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 3666649,
        "url": "https://api.github.com/repos/rails/rails/labels/actionview",
        "name": "actionview",
        "color": "d7e102",
        "default": false
      },
      {
        "id": 41328116,
        "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
        "name": "attached PR",
        "color": "006b75",
        "default": false
      },
      {
        "id": 149514554,
        "url": "https://api.github.com/repos/rails/rails/labels/pinned",
        "name": "pinned",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "guilleiguaran",
      "id": 160941,
      "avatar_url": "https://avatars.githubusercontent.com/u/160941?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/guilleiguaran",
      "html_url": "https://github.com/guilleiguaran",
      "followers_url": "https://api.github.com/users/guilleiguaran/followers",
      "following_url": "https://api.github.com/users/guilleiguaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/guilleiguaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/guilleiguaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/guilleiguaran/subscriptions",
      "organizations_url": "https://api.github.com/users/guilleiguaran/orgs",
      "repos_url": "https://api.github.com/users/guilleiguaran/repos",
      "events_url": "https://api.github.com/users/guilleiguaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/guilleiguaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "guilleiguaran",
        "id": 160941,
        "avatar_url": "https://avatars.githubusercontent.com/u/160941?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/guilleiguaran",
        "html_url": "https://github.com/guilleiguaran",
        "followers_url": "https://api.github.com/users/guilleiguaran/followers",
        "following_url": "https://api.github.com/users/guilleiguaran/following{/other_user}",
        "gists_url": "https://api.github.com/users/guilleiguaran/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/guilleiguaran/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/guilleiguaran/subscriptions",
        "organizations_url": "https://api.github.com/users/guilleiguaran/orgs",
        "repos_url": "https://api.github.com/users/guilleiguaran/repos",
        "events_url": "https://api.github.com/users/guilleiguaran/events{/privacy}",
        "received_events_url": "https://api.github.com/users/guilleiguaran/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 19,
    "created_at": "2012-07-31T21:30:49Z",
    "updated_at": "2016-02-16T02:31:34Z",
    "closed_at": null,
    "body": "While testing helper methods that use image_tag\n\n``` ruby\nmodule SomeHelper\n  def using_image_tag\n    image_tag(\"rails.png\")\n  end\nend\n```\n\nthe helper returns the image path starting with '/images' even though the asset pipeline is turned on\n\n``` ruby\nrequire 'test_helper'\n\nclass SomeHelperTest < ActionView::TestCase\n  test \"should resolve src to /assets/rails.png\" do\n    assert_equal \"<img alt=\\\"Rails\\\" src=\\\"/assets/rails.png\\\" />\", using_image_tag\n  end\nend\n```\n\ngiving\n\n``` output\n  1) Failure:\ntest_should_resolve_src_to_/assets/rails.png(SomeHelperTest) [/Users/manda/projects/demo/test/unit/helpers/some_helper_test.rb:5]:\n<\"<img alt=\\\"Rails\\\" src=\\\"/assets/rails.png\\\" />\"> expected but was\n<\"<img alt=\\\"Rails\\\" src=\\\"/images/rails.png\\\" />\">.\n```\n\na repo with new app showing the problem, just run rake test: git://github.com/Mandaryn/action_view_test_case_problem_with_image_tag_and_asset_pipeline.git\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/7047",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/7047/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/7047/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/7047/events",
    "html_url": "https://github.com/rails/rails/issues/7047",
    "id": 5610876,
    "number": 7047,
    "title": "Optional parameters in routes",
    "user": {
      "login": "woto",
      "id": 146704,
      "avatar_url": "https://avatars.githubusercontent.com/u/146704?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/woto",
      "html_url": "https://github.com/woto",
      "followers_url": "https://api.github.com/users/woto/followers",
      "following_url": "https://api.github.com/users/woto/following{/other_user}",
      "gists_url": "https://api.github.com/users/woto/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/woto/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/woto/subscriptions",
      "organizations_url": "https://api.github.com/users/woto/orgs",
      "repos_url": "https://api.github.com/users/woto/repos",
      "events_url": "https://api.github.com/users/woto/events{/privacy}",
      "received_events_url": "https://api.github.com/users/woto/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      },
      {
        "id": 149514554,
        "url": "https://api.github.com/repos/rails/rails/labels/pinned",
        "name": "pinned",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 23,
    "created_at": "2012-07-13T18:30:14Z",
    "updated_at": "2015-12-18T03:35:23Z",
    "closed_at": null,
    "body": "Hello, sorry for Bad English.\nToday i updated from 3.1.3 to 3.2.6 and found that my routes doesn't work correct. I'm absolutely sure that it's because of update. But i'm not sure that this is documented feature.\n\nmy route looks like\n\n```\n  resources :searches do \n    match '(/:catalog_number(/:manufacturer(/:replacements)))' => \"searches#index\", :on => :collection, :as => :search, :via => :get\n  end\n```\n\nand I call it so\n\n```\n<%= link_to 'Посмотреть аналоги всех найденных номеров', search_searches_path(params[:catalog_number], nil, \"1\"), :remote => true, :class => 'ajax-search' %>\n```\n\nto get url's that's i need\n.../searches/catalog_number/manufacturer/1\n.../searches/catalog_number/manufacturer/\n.../searches/catalog_number?replacements=1\n\nfor now it's always looks like if i add nil to :manufacturer parameter\n.../searches/catalog_number\n\nI can write more cleanly examples but especially copy-paste to reproduce error.\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/6922",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/6922/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/6922/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/6922/events",
    "html_url": "https://github.com/rails/rails/pull/6922",
    "id": 5375927,
    "number": 6922,
    "title": "Allow assert_recognizes and recognize_path to support url redirects from...",
    "user": {
      "login": "andrewferk",
      "id": 113192,
      "avatar_url": "https://avatars.githubusercontent.com/u/113192?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andrewferk",
      "html_url": "https://github.com/andrewferk",
      "followers_url": "https://api.github.com/users/andrewferk/followers",
      "following_url": "https://api.github.com/users/andrewferk/following{/other_user}",
      "gists_url": "https://api.github.com/users/andrewferk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andrewferk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andrewferk/subscriptions",
      "organizations_url": "https://api.github.com/users/andrewferk/orgs",
      "repos_url": "https://api.github.com/users/andrewferk/repos",
      "events_url": "https://api.github.com/users/andrewferk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andrewferk/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 26,
    "created_at": "2012-07-01T18:32:21Z",
    "updated_at": "2016-04-20T23:12:38Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/6922",
      "html_url": "https://github.com/rails/rails/pull/6922",
      "diff_url": "https://github.com/rails/rails/pull/6922.diff",
      "patch_url": "https://github.com/rails/rails/pull/6922.patch"
    },
    "body": "Currently, there is no way to unit test the Redirection module in ActionDispatch::Routing. Also, redirects are not recognized as paths using `recognize_path`. These problems lead to a potential false positive. If you have this routing:\n\n``` ruby\nget 'help' => redirect('http://help.example.org/')\nget 'help' => 'help#index'\n```\n\nand this test:\n\n``` ruby\ntest \"should recognize /help as help#index\" do\n  assert_recognizes({:controller => 'help', :action => 'index'}, '/help')\nend\n```\n\nthe test passes, but actually, it should recognize /help as a redirect.\n\nWith this commit, it fixes the false negative and allows for url redirection:\n\n``` ruby\nget 'help' => redirect(\"http://example.org/\")\nassert_recognizes(\"http://example.org/\", \"/help\")\n```\n\nThis is just a start to fix this issue, as the Redirection module offers much more than just external url redirection. Would definitely be willing to discuss other ways to unit test redirection; however, i think it is a bug that assert_recognizes does not recognize redirection routes.\n\nMore referenced <a href=\"https://github.com/rails/rails/issues/2488\">here</a>.\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/5223",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/5223/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/5223/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/5223/events",
    "html_url": "https://github.com/rails/rails/issues/5223",
    "id": 3443840,
    "number": 5223,
    "title": "RemoteIp middleware trusted proxies config does not affect Rack::Request::trusted_proxy?",
    "user": {
      "login": "courtland",
      "id": 12778,
      "avatar_url": "https://avatars.githubusercontent.com/u/12778?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/courtland",
      "html_url": "https://github.com/courtland",
      "followers_url": "https://api.github.com/users/courtland/followers",
      "following_url": "https://api.github.com/users/courtland/following{/other_user}",
      "gists_url": "https://api.github.com/users/courtland/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/courtland/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/courtland/subscriptions",
      "organizations_url": "https://api.github.com/users/courtland/orgs",
      "repos_url": "https://api.github.com/users/courtland/repos",
      "events_url": "https://api.github.com/users/courtland/events{/privacy}",
      "received_events_url": "https://api.github.com/users/courtland/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      },
      {
        "id": 126910270,
        "url": "https://api.github.com/repos/rails/rails/labels/With%20reproduction%20steps",
        "name": "With reproduction steps",
        "color": "009800",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 26,
    "created_at": "2012-02-29T20:43:11Z",
    "updated_at": "2016-11-30T22:44:03Z",
    "closed_at": null,
    "body": "I have clients that connect to my rails app from a private IP address, where the clients real IP is presented to rails via the X-Forwarded-For header (Thin cluster behind a pound load balancer). By default, rails assumes these private addresses are \"trusted proxies\", which causes Request#remote_ip to return '127.0.0.1'.\n\nThis was somewhat addressed by pull request #2632 by making TRUSTED_PROXIES configurable in the RemoteIp Class.\n\nHowever, Rails::Rack::Logger methods still call Rack::Request#ip which causes the IP address displayed in my logs to be 127.0.0.1.\n\nBased on this change in rack: https://github.com/rack/rack/pull/192\nIt seems that ActionDispatch::Request should override Rack::Request#trusted_proxy? with the same \"trusted proxies\" that are configured for RemoteIp.\n\nAt the moment I have the following in an initializer to fix the problem for me, but it is obviously a really bad hack.\n\n```\nmodule Rack\n  class Request\n    def trusted_proxy?(ip)\n      ip =~ /^127\\.0\\.0\\.1$/\n    end\n  end\nend\n```\n\nDoes anyone have comments or suggestions otherwise? I can attempt a patch if my logic seems sound. Thanks.\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/2686",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/2686/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/2686/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/2686/events",
    "html_url": "https://github.com/rails/rails/issues/2686",
    "id": 1480676,
    "number": 2686,
    "title": "Attachments not visible in mail clients when additional inline attachments present",
    "user": {
      "login": "icanhasserver",
      "id": 1003332,
      "avatar_url": "https://avatars.githubusercontent.com/u/1003332?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/icanhasserver",
      "html_url": "https://github.com/icanhasserver",
      "followers_url": "https://api.github.com/users/icanhasserver/followers",
      "following_url": "https://api.github.com/users/icanhasserver/following{/other_user}",
      "gists_url": "https://api.github.com/users/icanhasserver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/icanhasserver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/icanhasserver/subscriptions",
      "organizations_url": "https://api.github.com/users/icanhasserver/orgs",
      "repos_url": "https://api.github.com/users/icanhasserver/repos",
      "events_url": "https://api.github.com/users/icanhasserver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/icanhasserver/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107188,
        "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
        "name": "actionmailer",
        "color": "8B00FC",
        "default": false
      },
      {
        "id": 41328116,
        "url": "https://api.github.com/repos/rails/rails/labels/attached%20PR",
        "name": "attached PR",
        "color": "006b75",
        "default": false
      },
      {
        "id": 149514554,
        "url": "https://api.github.com/repos/rails/rails/labels/pinned",
        "name": "pinned",
        "color": "f7c6c7",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 50,
    "created_at": "2011-08-25T06:48:13Z",
    "updated_at": "2016-09-10T18:40:41Z",
    "closed_at": null,
    "body": "When assembling an email with mixed inline / normal attachments, only the inline attachments (i.e. images) are shown. Some mail clients don't detect the attached files, the most prominent being Thunderbird and Outlook.\n\nCode used with ActionMailer 3.0.10:\n\n``` ruby\nclass MultipartTest < ActionMailer::Base\n  def test_email(recipient)\n    attachments['file1.pdf'] = File.read('/somewhere/file1.pdf')\n    attachments['file2.pdf'] = File.read('/somewhere/file2.pdf')\n    attachments.inline['image1.gif'] = File.read('/somewhere/image1.gif')\n    mail(\n      :to => recipient,\n      :subject => 'Multipart test'\n    )\n  end\nend\n```\n\nThe generated email comes as follows:\n\n```\nmultipart/related\n  multipart/alternative\n    text/plain\n    text/html\n  attachment (disposition: inline, image1)\n  attachment (disposition: attachment, file1)\n  attachment (disposition: attachment, file2)\n```\n\nWhile ActionMailer::Base::set_content_type() chooses multipart/related as soon as it detects at least one inline attachment, mail clients always wrap the attached files (disposition: attachment) in an additional multipart/mixed layer, conforming to RFC 2046, Section 5.1.3.\n\nWhen leaving out the inline attachement, the MIME type generated by ActionMailer is correct (multipart/mixed) and the attachments are visible.\n\nHere are some MIME layouts, as generated by mail clients:\n\n```\nmultipart/mixed\n  multipart/alternative\n    text/plain\n    multipart/related\n      text/html\n      attachment (disposition: inline, image1)\n  attachment (disposition: attachment, file1)\n  attachment (disposition: attachment, file2)\n```\n\nor:\n\n```\nmultipart/mixed\n  multipart/related\n    multipart/alternative\n      text/plain\n      text/html\n    attachment (disposition: inline, image1)\n  attachment (disposition: attachment, file1)\n  attachment (disposition: attachment, file2)\n```\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/2045",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/2045/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/2045/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/2045/events",
    "html_url": "https://github.com/rails/rails/pull/2045",
    "id": 1211180,
    "number": 2045,
    "title": "Add possibility to render partial from subfolder with inheritance",
    "user": {
      "login": "aratak",
      "id": 30642,
      "avatar_url": "https://avatars.githubusercontent.com/u/30642?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aratak",
      "html_url": "https://github.com/aratak",
      "followers_url": "https://api.github.com/users/aratak/followers",
      "following_url": "https://api.github.com/users/aratak/following{/other_user}",
      "gists_url": "https://api.github.com/users/aratak/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aratak/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aratak/subscriptions",
      "organizations_url": "https://api.github.com/users/aratak/orgs",
      "repos_url": "https://api.github.com/users/aratak/repos",
      "events_url": "https://api.github.com/users/aratak/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aratak/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 3666649,
        "url": "https://api.github.com/repos/rails/rails/labels/actionview",
        "name": "actionview",
        "color": "d7e102",
        "default": false
      }
    ],
    "state": "open",
    "locked": true,
    "assignee": {
      "login": "rafaelfranca",
      "id": 47848,
      "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rafaelfranca",
      "html_url": "https://github.com/rafaelfranca",
      "followers_url": "https://api.github.com/users/rafaelfranca/followers",
      "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
      "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
      "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
      "repos_url": "https://api.github.com/users/rafaelfranca/repos",
      "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "rafaelfranca",
        "id": 47848,
        "avatar_url": "https://avatars.githubusercontent.com/u/47848?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/rafaelfranca",
        "html_url": "https://github.com/rafaelfranca",
        "followers_url": "https://api.github.com/users/rafaelfranca/followers",
        "following_url": "https://api.github.com/users/rafaelfranca/following{/other_user}",
        "gists_url": "https://api.github.com/users/rafaelfranca/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/rafaelfranca/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/rafaelfranca/subscriptions",
        "organizations_url": "https://api.github.com/users/rafaelfranca/orgs",
        "repos_url": "https://api.github.com/users/rafaelfranca/repos",
        "events_url": "https://api.github.com/users/rafaelfranca/events{/privacy}",
        "received_events_url": "https://api.github.com/users/rafaelfranca/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 38,
    "created_at": "2011-07-12T20:20:44Z",
    "updated_at": "2014-06-12T10:53:32Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/2045",
      "html_url": "https://github.com/rails/rails/pull/2045",
      "diff_url": "https://github.com/rails/rails/pull/2045.diff",
      "patch_url": "https://github.com/rails/rails/pull/2045.patch"
    },
    "body": "The new feature named \"template inheritance\" don't allow to render partial inside subfolders. Partials with slash in path name can be found only from views root folder. \n\nMy pull request extends behavior of template inheritance, and allow to render partial inside subfolders with inheritance feature. I suggest to use `./` at the start, and this partial will be found with relative path (from current directory). So, \n\n```\n  render :partial => \"./head/menu\"\n```\n\ncan be found in several folders, as template inheritance means:\n\n```\n - views\n    - application\n      - head\n        - menu.html.erb\n    - controller_name\n      - head\n        - menu.html.erb\n```\n"
  }
]}
