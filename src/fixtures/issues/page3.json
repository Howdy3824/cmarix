{
"link": "<https://api.github.com/repositories/8514/issues?per_page=25&page=4>; rel=\"next\", <https://api.github.com/repositories/8514/issues?per_page=25&page=49>; rel=\"last\", <https://api.github.com/repositories/8514/issues?per_page=25&page=1>; rel=\"first\", <https://api.github.com/repositories/8514/issues?per_page=25&page=2>; rel=\"prev\"",
"data": [
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27364",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27364/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27364/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27364/events",
    "html_url": "https://github.com/rails/rails/issues/27364",
    "id": 195682569,
    "number": 27364,
    "title": "Nullify callback persists even as child class overrides association",
    "user": {
      "login": "chrisarcand",
      "id": 2430490,
      "avatar_url": "https://avatars.githubusercontent.com/u/2430490?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chrisarcand",
      "html_url": "https://github.com/chrisarcand",
      "followers_url": "https://api.github.com/users/chrisarcand/followers",
      "following_url": "https://api.github.com/users/chrisarcand/following{/other_user}",
      "gists_url": "https://api.github.com/users/chrisarcand/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chrisarcand/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chrisarcand/subscriptions",
      "organizations_url": "https://api.github.com/users/chrisarcand/orgs",
      "repos_url": "https://api.github.com/users/chrisarcand/repos",
      "events_url": "https://api.github.com/users/chrisarcand/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chrisarcand/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-12-15T00:14:13Z",
    "updated_at": "2016-12-15T01:03:24Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n\r\n```\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"activerecord\", \"5.0.0.1\"\r\n  gem \"sqlite3\"\r\n  gem 'pry'\r\n  gem 'pry-byebug'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# Ensure backward compatibility with Minitest 4\r\nMinitest::Test = MiniTest::Unit::TestCase unless defined?(Minitest::Test)\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table \"houses\", force: :cascade do |t|\r\n    t.integer  \"person_id\"\r\n    t.datetime \"created_at\", null: false\r\n    t.datetime \"updated_at\", null: false\r\n  end\r\n\r\n  create_table \"people\", force: :cascade do |t|\r\n    t.integer  \"parent_id\"\r\n    t.datetime \"created_at\", null: false\r\n    t.datetime \"updated_at\", null: false\r\n  end\r\nend\r\n\r\nclass House < ActiveRecord::Base\r\n  belongs_to :person\r\nend\r\n\r\nclass Person < ActiveRecord::Base\r\n  has_one :child, :foreign_key => 'parent_id', :foreign_type => 'Child'\r\n  # Houses will continue to exist, but without their owners...\r\n  has_many :houses, :dependent => :nullify\r\nend\r\n\r\nclass Child < Person\r\n  belongs_to :parent, :class_name => 'Person'\r\n  # A child's house is their parent's house!\r\n  has_many :houses, :through => :parent\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def setup\r\n    @parent = Person.create(:houses => [House.create, House.create], :child => Child.create)\r\n    @child = @parent.child\r\n\r\n    assert_equal @parent.child, @child\r\n    assert_equal @child.parent, @parent\r\n    assert_equal @parent.houses.count, 2\r\n  end\r\n\r\n  def test_parentless_child_houses\r\n    @parentless_child = Child.create\r\n\r\n    assert_equal @parentless_child.houses.count, 0 # Passes\r\n  end\r\n\r\n  def test_child_houses_are_their_parents_houses\r\n    assert_equal @parent.houses, @child.houses # Passes\r\n  end\r\n\r\n  def test_person_destroy\r\n    assert @parent.destroy # Passes\r\n  end\r\n\r\n  def test_child_destroy\r\n    assert @child.destroy # Fails!\r\n  end\r\nend\r\n```\r\n\r\n### Expected behavior\r\n\r\nI should be able to destroy the child as the association I've specified does not attempt to nullify houses. \r\n\r\n### Actual behavior\r\n\r\n```\r\nError: BugTest#test_child_destroy:\r\nActiveRecord::HasManyThroughCantAssociateThroughHasOneOrManyReflection:\r\nCannot modify association 'Child#houses' because the source reflection class\r\n'House' is associated to 'Person' via :has_many.\r\n```\r\n\r\n### More notes\r\n\r\nI've been digging in a bit trying to find the cause of this, but have started getting in over my head with callbacks. It appears on `child.destroy` that `_destroy_callbacks` from a `nullify` are indeed present (even though they shouldn't be), although the options within the reflection object doesn't seem to indicate that:\r\n\r\n```\r\n> Person.reflections['houses']\r\n=> #<ActiveRecord::Reflection::HasManyReflection:0x007fc1703b2070\r\n @active_record=Person(id: integer, parent_id: integer, created_at: datetime, updated_at: datetime),\r\n @active_record_primary_key=\"id\",\r\n @association_scope_cache={},\r\n @automatic_inverse_of=:person,\r\n @class_name=\"House\",\r\n @constructable=true,\r\n @foreign_key=\"person_id\",\r\n @foreign_type=\"houses_type\",\r\n @inverse_of=\r\n  #<ActiveRecord::Reflection::BelongsToReflection:0x007fc1703fa3e8\r\n   @active_record=House(id: integer, person_id: integer, created_at: datetime, updated_at: datetime),\r\n   @association_scope_cache={},\r\n   @automatic_inverse_of=false,\r\n   @class_name=\"Person\",\r\n   @constructable=true,\r\n   @foreign_key=\"person_id\",\r\n   @foreign_type=\"person_type\",\r\n   @klass=Person(id: integer, parent_id: integer, created_at: datetime, updated_at: datetime),\r\n   @name=:person,\r\n   @options={},\r\n   @plural_name=\"people\",\r\n   @scope=nil,\r\n   @scope_lock=#<Thread::Mutex:0x007fc1703f9f60>,\r\n   @type=nil>,\r\n @inverse_which_updates_counter_cache=nil,\r\n @klass=House(id: integer, person_id: integer, created_at: datetime, updated_at: datetime),\r\n @name=:houses,\r\n @options={:dependent=>:nullify},\r\n @plural_name=\"houses\",\r\n @scope=nil,\r\n @scope_lock=#<Thread::Mutex:0x007fc1703b1d00>,\r\n @type=nil>\r\n\r\n> Child.reflections['houses']\r\n=> #<ActiveRecord::Reflection::ThroughReflection:0x007fc170388bd0\r\n @class_name=\"House\",\r\n @delegate_reflection=\r\n  #<ActiveRecord::Reflection::HasManyReflection:0x007fc170388888\r\n   @active_record=Child(id: integer, parent_id: integer, created_at: datetime, updated_at: datetime),\r\n   @association_scope_cache={},\r\n   @automatic_inverse_of=false,\r\n   @constructable=true,\r\n   @foreign_type=\"houses_type\",\r\n   @klass=nil,\r\n   @name=:houses,\r\n   @options={:through=>:parent},\r\n   @plural_name=\"houses\",\r\n   @scope=nil,\r\n   @scope_lock=#<Thread::Mutex:0x007fc170388388>,\r\n   @type=nil>,\r\n @klass=House(id: integer, person_id: integer, created_at: datetime, updated_at: datetime),\r\n @source_reflection_name=:houses>\r\n```\r\n\r\n### System configuration\r\n**Rails version**: 5.0.0.1\r\n\r\n**Ruby version**: 2.3.1\r\n\r\ncc/ @matthewd @durandom"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27362",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27362/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27362/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27362/events",
    "html_url": "https://github.com/rails/rails/pull/27362",
    "id": 195615061,
    "number": 27362,
    "title": "Adding protect_from_forgery into ActionController::Base",
    "user": {
      "login": "homakov",
      "id": 174693,
      "avatar_url": "https://avatars.githubusercontent.com/u/174693?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/homakov",
      "html_url": "https://github.com/homakov",
      "followers_url": "https://api.github.com/users/homakov/followers",
      "following_url": "https://api.github.com/users/homakov/following{/other_user}",
      "gists_url": "https://api.github.com/users/homakov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/homakov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/homakov/subscriptions",
      "organizations_url": "https://api.github.com/users/homakov/orgs",
      "repos_url": "https://api.github.com/users/homakov/repos",
      "events_url": "https://api.github.com/users/homakov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/homakov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      },
      {
        "id": 91966972,
        "url": "https://api.github.com/repos/rails/rails/labels/security",
        "name": "security",
        "color": "D94A4A",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "eileencodes",
      "id": 1080678,
      "avatar_url": "https://avatars.githubusercontent.com/u/1080678?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eileencodes",
      "html_url": "https://github.com/eileencodes",
      "followers_url": "https://api.github.com/users/eileencodes/followers",
      "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/eileencodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
      "organizations_url": "https://api.github.com/users/eileencodes/orgs",
      "repos_url": "https://api.github.com/users/eileencodes/repos",
      "events_url": "https://api.github.com/users/eileencodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eileencodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "eileencodes",
        "id": 1080678,
        "avatar_url": "https://avatars.githubusercontent.com/u/1080678?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eileencodes",
        "html_url": "https://github.com/eileencodes",
        "followers_url": "https://api.github.com/users/eileencodes/followers",
        "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
        "gists_url": "https://api.github.com/users/eileencodes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
        "organizations_url": "https://api.github.com/users/eileencodes/orgs",
        "repos_url": "https://api.github.com/users/eileencodes/repos",
        "events_url": "https://api.github.com/users/eileencodes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eileencodes/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-12-14T18:56:13Z",
    "updated_at": "2016-12-27T15:51:33Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27362",
      "html_url": "https://github.com/rails/rails/pull/27362",
      "diff_url": "https://github.com/rails/rails/pull/27362.diff",
      "patch_url": "https://github.com/rails/rails/pull/27362.patch"
    },
    "body": "### Pre-history\r\n\r\nEver asked yourself why default `application_controller` looks like this?\r\n\r\n```\r\nclass ApplicationController < ActionController::Base\r\n  protect_from_forgery with: :exception\r\nend\r\n```\r\n\r\nLike many things in Rails, it's just a tradition, not because it's the right thing to do. (Remember match ':controller/:action/:id' that left every single action vulnerable to CSRF?).\r\n\r\nLet's figure out how exactly this innocent line is bad. First, <a href=\"http://homakov.blogspot.com/2014/12/blatant-csrf-in-doorkeeper-most-popular.html\">we need to review a story with Doorkeeper</a> which left every Doorkeeper endpoint vulnerable to CSRF i.e. getting access token with any scope with unauthenticated POST request. Websites like Digital Ocean/Coinbase etc got a really bad bug because of 3rd party library.\r\n\r\nThe problem behind that was how Doorkeeper's ApplicationController inherited from Base w/o the protect_from_forgery part. Same thing happened to few other gems: it's very easy to forget to include that critical line of code. Many developers create new internal controllers (like AdminController) and also don't include that line. Long story short, I audited a lot of Rails code: **it's been a disaster.** \r\n\r\nIt's clear to everyone, protect_from_forgery must be ON by default. But the right place for it is in `base.rb`, not in the generated template. Base has everything that works with the browser: cookies, sessions, redirects, and to work properly with the browser it also must *always* verify the authenticity_token. It's not like we can routinely switch it on or of.\r\n\r\n## CSRF protection 101: \r\n\r\nIf the request has authenticity_token equal one from the session = request was initiated from our domain, session and cookies can be used.\r\n\r\nIf it lacks authenticity_token or it's invalid = nullify cookies/session. Do not raise any error - explicit API tokens can be used. Just pretend you didn't receive any cookies plus show a console warning \"Received cookies without valid authenticity_token\".\r\n\r\nThere's no use in two other options:\r\n\r\n1. As you can see `with: :exception` breaks APIs - those would be just fine w/o cookies (and there wouldn't be tons of reports on StackOverflow from people trying to make API work on Rails and eventually switching that annoying thing off with skip_before_filter...).\r\n\r\n2. :reset_session option would be equivalent to Log Out CSRF - very annoying low severity bug, makes no sense to use this one.\r\n\r\nRecap:\r\n\r\n1. We must add `protect_from_forgery with: :null_session` directly to `base.rb`, to the controlling talking to the browser. That would prevent dozens of gems out there being vulnerable to CSRF like Doorkeeper because they forgot to add \"protect_me_from_csrf\" line at some point\r\n\r\n2. We should deprecate two other options :reset_session/:exception because they are useless and even somewhat dangerous."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27352",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27352/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27352/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27352/events",
    "html_url": "https://github.com/rails/rails/issues/27352",
    "id": 195476735,
    "number": 27352,
    "title": "mounted_helper for the same engine can't be defined multiple times",
    "user": {
      "login": "k0kubun",
      "id": 3138447,
      "avatar_url": "https://avatars.githubusercontent.com/u/3138447?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k0kubun",
      "html_url": "https://github.com/k0kubun",
      "followers_url": "https://api.github.com/users/k0kubun/followers",
      "following_url": "https://api.github.com/users/k0kubun/following{/other_user}",
      "gists_url": "https://api.github.com/users/k0kubun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k0kubun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k0kubun/subscriptions",
      "organizations_url": "https://api.github.com/users/k0kubun/orgs",
      "repos_url": "https://api.github.com/users/k0kubun/repos",
      "events_url": "https://api.github.com/users/k0kubun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k0kubun/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      },
      {
        "id": 35206628,
        "url": "https://api.github.com/repos/rails/rails/labels/routing",
        "name": "routing",
        "color": "e102d8",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-14T09:11:18Z",
    "updated_at": "2016-12-15T02:06:16Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n\r\n```bash\r\ngit clone --branch engine-bug https://github.com/k0kubun/misc\r\ncd misc/engine_bug\r\nbundle install\r\nbundle exec rake engine_bug\r\n# \"/b/sample/\"\r\n# \"/b/sample/\"\r\n```\r\n\r\n### Expected behavior\r\nWith following routes.rb\r\n\r\n```rb\r\nRails.application.routes.draw do\r\n  namespace :a do\r\n    mount Sample::Engine => '/sample'\r\n  end\r\n\r\n  namespace :b do\r\n    mount Sample::Engine => '/sample'\r\n  end\r\nend\r\n```\r\n\r\nand following class (like `RSpec::Rails::FeatureExampleGroup`),\r\n\r\n```rb\r\nklass = Class.new do\r\n  include Rails.application.routes.url_helpers\r\n  include Rails.application.routes.mounted_helpers\r\nend\r\n```\r\n\r\nI expect `klass` to behave like:\r\n\r\n```rb\r\nklass.new.a_sample.root_path #=> \"/a/sample/\"\r\nklass.new.b_sample.root_path #=> \"/b/sample/\"\r\n```\r\n\r\n### Actual behavior\r\n```rb\r\nklass.new.a_sample.root_path #=> \"/b/sample/\"\r\nklass.new.b_sample.root_path #=> \"/b/sample/\"\r\n```\r\n\r\nIs this intentional?\r\n\r\n### System configuration\r\n**Rails version**: 5.0.0.1\r\n\r\n**Ruby version**: 2.3.1\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27348",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27348/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27348/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27348/events",
    "html_url": "https://github.com/rails/rails/issues/27348",
    "id": 195351810,
    "number": 27348,
    "title": "ActiveRecord: Attribute methods are not getting defined on Marshal.load",
    "user": {
      "login": "kamaljoshi",
      "id": 1579489,
      "avatar_url": "https://avatars.githubusercontent.com/u/1579489?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamaljoshi",
      "html_url": "https://github.com/kamaljoshi",
      "followers_url": "https://api.github.com/users/kamaljoshi/followers",
      "following_url": "https://api.github.com/users/kamaljoshi/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamaljoshi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamaljoshi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamaljoshi/subscriptions",
      "organizations_url": "https://api.github.com/users/kamaljoshi/orgs",
      "repos_url": "https://api.github.com/users/kamaljoshi/repos",
      "events_url": "https://api.github.com/users/kamaljoshi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamaljoshi/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 10,
    "created_at": "2016-12-13T19:55:23Z",
    "updated_at": "2016-12-18T09:17:55Z",
    "closed_at": null,
    "body": "As outlined in the issue https://github.com/rails/rails/issues/18659, If you create your object instance using Marshal.load; `#allocate`, `#initialize` or `#init_with` are not called and that results in model not getting defined with attribute methods. So, things like overriding attribute method breaks. This used to work prior to AR 4.2 and broke with this change: https://github.com/rails/rails/commit/84cf156e2428551069d6fba5547fc41bc42182b2#diff-dfe09551f2188457e7e1891d86047c57\r\n\r\nI tested this on AR 4.2 but I guess this bug is even present in AR 5.\r\n\r\n### Steps to reproduce\r\nAccording to the issue creation guidelines, I am adding the script to reproduce it\r\n\r\n```ruby\r\nbegin\r\n  require \"bundler/inline\"\r\nrescue LoadError => e\r\n  $stderr.puts \"Bundler version 1.10 or later is required. Please update your Bundler\"\r\n  raise e\r\nend\r\n\r\ngemfile(true) do\r\n  source \"https://rubygems.org\"\r\n  gem \"rails\", '4.2.7.1'\r\n  gem \"sqlite3\", '1.3.11'\r\nend\r\n\r\nrequire \"active_record\"\r\nrequire \"minitest/autorun\"\r\nrequire \"logger\"\r\n\r\n# This connection will do for database-independent bug reports.\r\nActiveRecord::Base.establish_connection(adapter: \"sqlite3\", database: \":memory:\")\r\nActiveRecord::Base.logger = Logger.new(STDOUT)\r\n\r\nActiveRecord::Schema.define do\r\n  create_table :posts, force: true do |t|\r\n    t.string :title\r\n  end\r\nend\r\n\r\nclass Post < ActiveRecord::Base\r\n  def title\r\n    super || 'Default Title'\r\n  end\r\nend\r\n\r\nclass BugTest < Minitest::Test\r\n  def test_attribute_definition\r\n    Post.create!\r\n    Post.reset_column_information\r\n\r\n    post = Post.last\r\n\r\n    assert_equal 'Default Title', post.title\r\n    assert_equal true, post.class.instance_variable_get(:@attribute_methods_generated)\r\n  end\r\n\r\n  def test_attribute_definition_with_marshal\r\n    dump = Marshal.dump(Post.create!)\r\n    Post.reset_column_information\r\n\r\n    post = Marshal.load(dump)\r\n\r\n    assert_equal 'Default Title', post.title\r\n  end\r\n\r\n  def test_attribute_definition_bool_with_marshal\r\n    dump = Marshal.dump(Post.create!)\r\n    Post.reset_column_information\r\n\r\n    post = Marshal.load(dump)\r\n\r\n    assert_equal true, post.class.instance_variable_get(:@attribute_methods_generated)\r\n  end\r\nend\r\n```\r\n\r\n### Expected behaviour\r\nIf the attribute methods are not defined, they should be appropriately defined so things like calling `super` works in case of overriden methods.\r\n\r\n### Actual behaviour\r\nRight now, due to the attribute not being defined it fails and throws a NoMethodError when `method_missing` from ActiveModel tries to call the original method as the method defined check(`respond_to_without_attributes?(method, true)`) succeeds in that.\r\n\r\n### System configuration\r\n**Rails version**: 4.2.7.1\r\n\r\n**Ruby version**: 2.1.5\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27343",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27343/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27343/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27343/events",
    "html_url": "https://github.com/rails/rails/issues/27343",
    "id": 195273867,
    "number": 27343,
    "title": "Deprecation message for ActiveRecord::Base.raise_in_transactional_callbacks does not include the correct location in 5.0.1.rc2",
    "user": {
      "login": "aried3r",
      "id": 1301152,
      "avatar_url": "https://avatars.githubusercontent.com/u/1301152?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aried3r",
      "html_url": "https://github.com/aried3r",
      "followers_url": "https://api.github.com/users/aried3r/followers",
      "following_url": "https://api.github.com/users/aried3r/following{/other_user}",
      "gists_url": "https://api.github.com/users/aried3r/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aried3r/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aried3r/subscriptions",
      "organizations_url": "https://api.github.com/users/aried3r/orgs",
      "repos_url": "https://api.github.com/users/aried3r/repos",
      "events_url": "https://api.github.com/users/aried3r/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aried3r/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      },
      {
        "id": 257468118,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20work",
        "name": "needs work",
        "color": "000000",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "matthewd",
      "id": 1034,
      "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewd",
      "html_url": "https://github.com/matthewd",
      "followers_url": "https://api.github.com/users/matthewd/followers",
      "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewd/orgs",
      "repos_url": "https://api.github.com/users/matthewd/repos",
      "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewd/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "matthewd",
        "id": 1034,
        "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/matthewd",
        "html_url": "https://github.com/matthewd",
        "followers_url": "https://api.github.com/users/matthewd/followers",
        "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
        "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
        "organizations_url": "https://api.github.com/users/matthewd/orgs",
        "repos_url": "https://api.github.com/users/matthewd/repos",
        "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/matthewd/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-12-13T14:54:31Z",
    "updated_at": "2017-01-05T05:00:15Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n\r\nI ran our full test run locally and while `spring` was warming up it printed a few deprecation warnings popped up. All of them showed the correct location except for `raise_in_transactional_callbacks`.\r\n\r\n`raise_in_transactional_callbacks` indeed exists in my application, it was added when migrating from Rails 4 to 5 and after reading [this in the upgrade guide](http://edgeguides.rubyonrails.org/upgrading_ruby_on_rails.html#error-handling-in-transaction-callbacks).\r\n\r\nI know I can just use `ag` or `grep`, but since other deprecation warnings show the correct location I thought I'd report it.\r\n\r\n/cc @matthewd, since the blog post about RC2 told me to. ;)\r\n\r\n### Expected behavior\r\n```\r\nDEPRECATION WARNING: ActiveRecord::Base.raise_in_transactional_callbacks= is deprecated, has no effect and will be removed without replacement. (called from block (3 levels) in <class:Application> at /path/to/my/rails/app/config/application.rb:26)\r\n```\r\n\r\n### Actual behavior\r\n```\r\nDEPRECATION WARNING: ActiveRecord::Base.raise_in_transactional_callbacks= is deprecated, has no effect and will be removed without replacement. (called from block (3 levels) in <class:Railtie> at /usr/local/opt/rbenv/versions/2.3.1/lib/ruby/gems/2.3.0/gems/activerecord-5.0.1.rc2/lib/active_record/railtie.rb:113)\r\n```\r\n\r\n### System configuration\r\n**Rails version**:\r\n5.0.1.rc2\r\n**Ruby version**:\r\n2.3.1"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27342",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27342/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27342/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27342/events",
    "html_url": "https://github.com/rails/rails/issues/27342",
    "id": 195178836,
    "number": 27342,
    "title": "after_commit uses incorrect final object when changing same object twice while reloading it from the DB",
    "user": {
      "login": "marktermaat",
      "id": 1849340,
      "avatar_url": "https://avatars.githubusercontent.com/u/1849340?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/marktermaat",
      "html_url": "https://github.com/marktermaat",
      "followers_url": "https://api.github.com/users/marktermaat/followers",
      "following_url": "https://api.github.com/users/marktermaat/following{/other_user}",
      "gists_url": "https://api.github.com/users/marktermaat/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/marktermaat/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/marktermaat/subscriptions",
      "organizations_url": "https://api.github.com/users/marktermaat/orgs",
      "repos_url": "https://api.github.com/users/marktermaat/repos",
      "events_url": "https://api.github.com/users/marktermaat/events{/privacy}",
      "received_events_url": "https://api.github.com/users/marktermaat/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-13T07:13:24Z",
    "updated_at": "2016-12-19T02:29:30Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n\r\nSay you have a simple model User with a name:string.\r\nAdditionally, say this model looks like the following:\r\n\r\n```\r\nclass User < ActiveRecord::Base\r\n  after_commit :print_user\r\n\r\n  def print_user\r\n    puts \"Current user: #{self.inspect}\"\r\n  end\r\nend\r\n```\r\n\r\nExecuting the following code in a console:\r\n```\r\nuser = User.find(1)\r\nUser.transaction do\r\n  user.name = 'new name 1'\r\n  user.save\r\n\r\n  user.name = 'new name 2'\r\n  user.save\r\nend\r\n```\r\nWill print the following user:\r\n`Current user: #<User id: 1, name: \"new name 2\">`\r\n\r\nHowever, executing the following code:\r\n\r\n```\r\nUser.transaction do\r\n  user = User.find(1)\r\n  user.name = 'new name 1'\r\n  user.save\r\n\r\n  user = User.find(1)\r\n  user.name = 'new name 2'\r\n  user.save\r\nend\r\n```\r\n\r\nresults in the following user:\r\n`Current user: #<User id: 1, username: \"admin\", name: \"new name 1\">`\r\n\r\n### Expected behavior\r\nI would have expected to see the after_commit method called with the final state of the object (so in this case: 'new name 2')\r\n\r\n### Actual behavior\r\nInstead, when reloading the object from the database it will send an intermediate version of the object to the after_commit method (I suspect the state of the object after the first time it's saved).\r\n\r\n### System configuration\r\n**Rails version**: 4.2.7.1\r\n\r\n**Ruby version**: 2.2.2\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27340",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27340/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27340/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27340/events",
    "html_url": "https://github.com/rails/rails/issues/27340",
    "id": 195093739,
    "number": 27340,
    "title": "ActiveRecord reselect() - would a PR be welcome?",
    "user": {
      "login": "brchristian",
      "id": 2460418,
      "avatar_url": "https://avatars.githubusercontent.com/u/2460418?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brchristian",
      "html_url": "https://github.com/brchristian",
      "followers_url": "https://api.github.com/users/brchristian/followers",
      "following_url": "https://api.github.com/users/brchristian/following{/other_user}",
      "gists_url": "https://api.github.com/users/brchristian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brchristian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brchristian/subscriptions",
      "organizations_url": "https://api.github.com/users/brchristian/orgs",
      "repos_url": "https://api.github.com/users/brchristian/repos",
      "events_url": "https://api.github.com/users/brchristian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brchristian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 257468118,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20work",
        "name": "needs work",
        "color": "000000",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-12T21:42:02Z",
    "updated_at": "2016-12-12T22:07:43Z",
    "closed_at": null,
    "body": "Inspired by `rewhere` and `reorder`, I’ve been looking into a similar implementation for `reselect`. I find it a helpful syntax to have, especially after getting used to the feel of the other two.\r\n\r\nIs this something the Rails team would be interested in if I prepared a PR?"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27334",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27334/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27334/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27334/events",
    "html_url": "https://github.com/rails/rails/pull/27334",
    "id": 194864073,
    "number": 27334,
    "title": "`primary_key` and `references` columns should be identical type",
    "user": {
      "login": "kamipo",
      "id": 12642,
      "avatar_url": "https://avatars.githubusercontent.com/u/12642?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamipo",
      "html_url": "https://github.com/kamipo",
      "followers_url": "https://api.github.com/users/kamipo/followers",
      "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamipo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
      "organizations_url": "https://api.github.com/users/kamipo/orgs",
      "repos_url": "https://api.github.com/users/kamipo/repos",
      "events_url": "https://api.github.com/users/kamipo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamipo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 257468118,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20work",
        "name": "needs work",
        "color": "000000",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sgrif",
      "id": 1529387,
      "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgrif",
      "html_url": "https://github.com/sgrif",
      "followers_url": "https://api.github.com/users/sgrif/followers",
      "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
      "organizations_url": "https://api.github.com/users/sgrif/orgs",
      "repos_url": "https://api.github.com/users/sgrif/repos",
      "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgrif/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-11T23:10:06Z",
    "updated_at": "2017-01-03T20:27:34Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27334",
      "html_url": "https://github.com/rails/rails/pull/27334",
      "diff_url": "https://github.com/rails/rails/pull/27334.diff",
      "patch_url": "https://github.com/rails/rails/pull/27334.patch"
    },
    "body": "Follow up to #26266.\r\n\r\nThe default type of `primary_key` and `references` were changed to\r\n`bigint` since #26266. But legacy migration and sqlite3 adapter should\r\nkeep its previous behavior."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27333",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27333/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27333/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27333/events",
    "html_url": "https://github.com/rails/rails/pull/27333",
    "id": 194860478,
    "number": 27333,
    "title": "Fix jbuilder <> ActionController::API testing issues",
    "user": {
      "login": "maclover7",
      "id": 3020626,
      "avatar_url": "https://avatars.githubusercontent.com/u/3020626?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maclover7",
      "html_url": "https://github.com/maclover7",
      "followers_url": "https://api.github.com/users/maclover7/followers",
      "following_url": "https://api.github.com/users/maclover7/following{/other_user}",
      "gists_url": "https://api.github.com/users/maclover7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maclover7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maclover7/subscriptions",
      "organizations_url": "https://api.github.com/users/maclover7/orgs",
      "repos_url": "https://api.github.com/users/maclover7/repos",
      "events_url": "https://api.github.com/users/maclover7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maclover7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-11T22:11:02Z",
    "updated_at": "2016-12-13T09:35:02Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27333",
      "html_url": "https://github.com/rails/rails/pull/27333",
      "diff_url": "https://github.com/rails/rails/pull/27333.diff",
      "patch_url": "https://github.com/rails/rails/pull/27333.patch"
    },
    "body": "### Summary\r\n\r\n- Add fallback encoder support to `ActionDispatch::IntegrationTest`\r\n  - Now gems like jbuilder can set fallback encoders (in that case, a\r\n`:json` fallback encoder for `ActionController::API` controllers).\r\n- Revert changes made in d68562e\r\n\r\n### Other Information\r\n\r\n- Should this be backported to `5-0-stable` (I think so...?)\r\n- Write patch for jbuilder that will utilize this new functionality\r\n\r\nPatch for jbuilder would look something like this:\r\n\r\n``` diff\r\n--- a/lib/jbuilder/railtie.rb\r\n+++ b/lib/jbuilder/railtie.rb\r\n@@ -20,6 +20,10 @@ class Jbuilder\r\n           if self == ActionController::API\r\n             include ActionController::Helpers\r\n             include ActionController::ImplicitRender\r\n+\r\n+            if ActionDispatch::IntegrationTest.respond_to?(:fallback_encoder=)\r\n+              ActionDispatch::IntegrationTest.fallback_encoder = :json\r\n+            end\r\n           end\r\n         end\r\n       end\r\n```\r\n\r\nref #25183"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27331",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27331/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27331/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27331/events",
    "html_url": "https://github.com/rails/rails/pull/27331",
    "id": 194847162,
    "number": 27331,
    "title": "collection_cache_key now respects limit()",
    "user": {
      "login": "brchristian",
      "id": 2460418,
      "avatar_url": "https://avatars.githubusercontent.com/u/2460418?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brchristian",
      "html_url": "https://github.com/brchristian",
      "followers_url": "https://api.github.com/users/brchristian/followers",
      "following_url": "https://api.github.com/users/brchristian/following{/other_user}",
      "gists_url": "https://api.github.com/users/brchristian/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brchristian/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brchristian/subscriptions",
      "organizations_url": "https://api.github.com/users/brchristian/orgs",
      "repos_url": "https://api.github.com/users/brchristian/repos",
      "events_url": "https://api.github.com/users/brchristian/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brchristian/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 257468118,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20work",
        "name": "needs work",
        "color": "000000",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sgrif",
      "id": 1529387,
      "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgrif",
      "html_url": "https://github.com/sgrif",
      "followers_url": "https://api.github.com/users/sgrif/followers",
      "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
      "organizations_url": "https://api.github.com/users/sgrif/orgs",
      "repos_url": "https://api.github.com/users/sgrif/repos",
      "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgrif/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 4,
    "created_at": "2016-12-11T18:26:03Z",
    "updated_at": "2017-01-04T20:09:06Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27331",
      "html_url": "https://github.com/rails/rails/pull/27331",
      "diff_url": "https://github.com/rails/rails/pull/27331.diff",
      "patch_url": "https://github.com/rails/rails/pull/27331.patch"
    },
    "body": "As recently discussed in https://github.com/rails/rails/issues/27326 and previously discussed in https://github.com/rails/rails/pull/21503, the implementation of `collection_cache_key` that was merged with https://github.com/rails/rails/pull/20884 would ignore `limit()` relations.\r\n\r\nThis had the effect of many scenarios where the collection_cache_key query was _slower_ than the actual ActiveRecord query it was supposed to be avoiding.\r\n\r\nFor example, in a publishing CMS that has 100,000 `Articles`, the front page might say something like `Article.last(5)`, but the `collection_cache_key` would grind away to find the `COUNT` and `MAX` of _all_ 100,000 timestamps!\r\n\r\n(In our company’s application, the SQL for the cache_key queries was about 8x slower than just loading the AR objects directly, even after making custom database indices to make the cache_key as fast as possible.)\r\n\r\nThis branch includes a failing test illustrating this issue, and a patch that fixes it.\r\n\r\n(cc @sgrif)"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27324",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27324/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27324/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27324/events",
    "html_url": "https://github.com/rails/rails/pull/27324",
    "id": 194785744,
    "number": 27324,
    "title": "Stop testing MRI implementation details",
    "user": {
      "login": "kirs",
      "id": 522155,
      "avatar_url": "https://avatars.githubusercontent.com/u/522155?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kirs",
      "html_url": "https://github.com/kirs",
      "followers_url": "https://api.github.com/users/kirs/followers",
      "following_url": "https://api.github.com/users/kirs/following{/other_user}",
      "gists_url": "https://api.github.com/users/kirs/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kirs/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kirs/subscriptions",
      "organizations_url": "https://api.github.com/users/kirs/orgs",
      "repos_url": "https://api.github.com/users/kirs/repos",
      "events_url": "https://api.github.com/users/kirs/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kirs/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "sgrif",
      "id": 1529387,
      "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sgrif",
      "html_url": "https://github.com/sgrif",
      "followers_url": "https://api.github.com/users/sgrif/followers",
      "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
      "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
      "organizations_url": "https://api.github.com/users/sgrif/orgs",
      "repos_url": "https://api.github.com/users/sgrif/repos",
      "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sgrif/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "sgrif",
        "id": 1529387,
        "avatar_url": "https://avatars.githubusercontent.com/u/1529387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/sgrif",
        "html_url": "https://github.com/sgrif",
        "followers_url": "https://api.github.com/users/sgrif/followers",
        "following_url": "https://api.github.com/users/sgrif/following{/other_user}",
        "gists_url": "https://api.github.com/users/sgrif/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/sgrif/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/sgrif/subscriptions",
        "organizations_url": "https://api.github.com/users/sgrif/orgs",
        "repos_url": "https://api.github.com/users/sgrif/repos",
        "events_url": "https://api.github.com/users/sgrif/events{/privacy}",
        "received_events_url": "https://api.github.com/users/sgrif/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-12-10T18:41:51Z",
    "updated_at": "2017-01-04T00:40:25Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27324",
      "html_url": "https://github.com/rails/rails/pull/27324",
      "diff_url": "https://github.com/rails/rails/pull/27324.diff",
      "patch_url": "https://github.com/rails/rails/pull/27324.patch"
    },
    "body": "Right now this test fails on JRuby:\r\n\r\n```\r\n--- expected\r\n+++ actual\r\n@@ -1 +1 @@\r\n-#<BigDecimal:5f3c866c,'0.333333333333333333',18(20)>\r\n+#<BigDecimal:16e0afab,'0.3333333333333333',16(20)>\r\n```\r\n\r\nWe should not describe MRI implementation details in tests because it's\r\nvalid only for MRI. We can't guarantee that `Rational(1, 3)` will\r\nalways be '0.3333333333333333',16(20) on other platforms.\r\n\r\nThis is the same issue as in #27117\r\n\r\n@guilleiguaran @maclover"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27319",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27319/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27319/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27319/events",
    "html_url": "https://github.com/rails/rails/pull/27319",
    "id": 194733789,
    "number": 27319,
    "title": "String#truncate_bytes",
    "user": {
      "login": "jeremy",
      "id": 199,
      "avatar_url": "https://avatars.githubusercontent.com/u/199?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jeremy",
      "html_url": "https://github.com/jeremy",
      "followers_url": "https://api.github.com/users/jeremy/followers",
      "following_url": "https://api.github.com/users/jeremy/following{/other_user}",
      "gists_url": "https://api.github.com/users/jeremy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jeremy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jeremy/subscriptions",
      "organizations_url": "https://api.github.com/users/jeremy/orgs",
      "repos_url": "https://api.github.com/users/jeremy/repos",
      "events_url": "https://api.github.com/users/jeremy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jeremy/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-10T01:14:34Z",
    "updated_at": "2016-12-10T18:22:08Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27319",
      "html_url": "https://github.com/rails/rails/pull/27319",
      "diff_url": "https://github.com/rails/rails/pull/27319.diff",
      "patch_url": "https://github.com/rails/rails/pull/27319.patch"
    },
    "body": "Limit to N bytes without breaking multibytes chars.\r\n\r\nCan be done with `foo.mb_chars.limit(n.bytes)`, but that's much slower.\r\n\r\nThis joins our `#truncate` and `#truncate_words` family."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27316",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27316/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27316/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27316/events",
    "html_url": "https://github.com/rails/rails/pull/27316",
    "id": 194722020,
    "number": 27316,
    "title": "Improve experience for declaring Rack routes",
    "user": {
      "login": "maclover7",
      "id": 3020626,
      "avatar_url": "https://avatars.githubusercontent.com/u/3020626?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maclover7",
      "html_url": "https://github.com/maclover7",
      "followers_url": "https://api.github.com/users/maclover7/followers",
      "following_url": "https://api.github.com/users/maclover7/following{/other_user}",
      "gists_url": "https://api.github.com/users/maclover7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maclover7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maclover7/subscriptions",
      "organizations_url": "https://api.github.com/users/maclover7/orgs",
      "repos_url": "https://api.github.com/users/maclover7/repos",
      "events_url": "https://api.github.com/users/maclover7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maclover7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107189,
        "url": "https://api.github.com/repos/rails/rails/labels/actionpack",
        "name": "actionpack",
        "color": "FFF700",
        "default": false
      },
      {
        "id": 35206628,
        "url": "https://api.github.com/repos/rails/rails/labels/routing",
        "name": "routing",
        "color": "e102d8",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-09T23:28:03Z",
    "updated_at": "2016-12-11T22:27:06Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27316",
      "html_url": "https://github.com/rails/rails/pull/27316",
      "diff_url": "https://github.com/rails/rails/pull/27316.diff",
      "patch_url": "https://github.com/rails/rails/pull/27316.patch"
    },
    "body": "### Summary\r\n\r\nThis commit has two main benefits:\r\n\r\n1. When trying to use the `match` (or really any other) helper to mount\r\na Rack application, it is possible that one could pass the wrong state\r\nof the Rack application to the route definition. For example, let's say\r\nyou have `RackApp` which defines its `call` method as an instance\r\nmethod (not on the class). If you do the following:\r\n\r\n```ruby\r\nget '/rack', to: RackApp\r\n```\r\n\r\nYou would previously get this error mesage:\r\n\r\n```\r\nArgumentError: Missing :controller key on routes definition, please check your routes.\r\n\tfrom /Users/jon/code/rails/rails/actionpack/lib/action_dispatch/routing/mapper.rb:327:in `check_part'\r\n\tfrom /Users/jon/code/rails/rails/actionpack/lib/action_dispatch/routing/mapper.rb:307:in `check_controller_and_action'\r\n[...]\r\n```\r\n\r\n, which is not very helpful. You would now get this error message:\r\n\r\n```\r\nArgumentError: A Rack application (responds to the #call method) must be specified\r\n\tfrom /Users/jon/code/rails/rails/actionpack/lib/action_dispatch/routing/mapper.rb:1860:in `raise_if_not_rack_app'\r\n\tfrom /Users/jon/code/rails/rails/actionpack/lib/action_dispatch/routing/mapper.rb:1880:in `decomposed_match'\r\n[...]\r\n```\r\n\r\n2. Improves the error message and capitalizes Rack.\r\n\r\nMy apologies for having to call `raise_if_not_rack_app` from so many different\r\nplaces... the routing code has many different branches, so it is\r\ndifficult to call the method from a single place. :("
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27310",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27310/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27310/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27310/events",
    "html_url": "https://github.com/rails/rails/issues/27310",
    "id": 194527482,
    "number": 27310,
    "title": "Rails 5 scaffold halts when server is not running",
    "user": {
      "login": "pamio",
      "id": 880558,
      "avatar_url": "https://avatars.githubusercontent.com/u/880558?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pamio",
      "html_url": "https://github.com/pamio",
      "followers_url": "https://api.github.com/users/pamio/followers",
      "following_url": "https://api.github.com/users/pamio/following{/other_user}",
      "gists_url": "https://api.github.com/users/pamio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pamio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pamio/subscriptions",
      "organizations_url": "https://api.github.com/users/pamio/orgs",
      "repos_url": "https://api.github.com/users/pamio/repos",
      "events_url": "https://api.github.com/users/pamio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pamio/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 257468118,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20work",
        "name": "needs work",
        "color": "000000",
        "default": false
      },
      {
        "id": 107195,
        "url": "https://api.github.com/repos/rails/rails/labels/railties",
        "name": "railties",
        "color": "8BE06E",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 8,
    "created_at": "2016-12-09T07:01:14Z",
    "updated_at": "2016-12-29T17:12:50Z",
    "closed_at": null,
    "body": "Using rails 5 and ruby 2.3 \r\n\r\n1. `rails new app`\r\n2. `cd app`\r\n3.  Don't start the server yet \r\n4. `rails g scaffold Album name:string`\r\n\r\nThat's it. It halts and doesn't run even after few minutes. \r\n\r\n### Work around \r\n\r\nRemove or comment these gems in the Gemfile \r\n\r\n    #gem 'spring'\r\n    #gem 'spring-watcher-listen', '~> 2.0.0'\r\n\r\nAnd then `bundle install`\r\n\r\nand it starts working \r\n\r\n### Expected behavior\r\nIt should generate scaffold with or without the server running. \r\n\r\n### Actual behavior\r\nDoesn't create the scaffolding files. \r\n\r\n### System configuration\r\n**Rails version**: 5.0.0.1\r\n\r\n**Ruby version**: 2.3.2\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27299",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27299/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27299/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27299/events",
    "html_url": "https://github.com/rails/rails/issues/27299",
    "id": 194195296,
    "number": 27299,
    "title": "When I run ENV=development rake db:create I don't expect it to try and create the test db too",
    "user": {
      "login": "ioquatix",
      "id": 30030,
      "avatar_url": "https://avatars.githubusercontent.com/u/30030?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ioquatix",
      "html_url": "https://github.com/ioquatix",
      "followers_url": "https://api.github.com/users/ioquatix/followers",
      "following_url": "https://api.github.com/users/ioquatix/following{/other_user}",
      "gists_url": "https://api.github.com/users/ioquatix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ioquatix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ioquatix/subscriptions",
      "organizations_url": "https://api.github.com/users/ioquatix/orgs",
      "repos_url": "https://api.github.com/users/ioquatix/repos",
      "events_url": "https://api.github.com/users/ioquatix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ioquatix/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2016-12-07T22:48:19Z",
    "updated_at": "2016-12-14T21:57:01Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n\r\nAccording to the following code: https://github.com/rails/rails/blob/3f279977ead48ace1acf53567fd258fe140e3b6f/activerecord/lib/active_record/tasks/database_tasks.rb#L286-L288\r\n\r\nWhen running something like this:\r\n\r\n```\r\nENV=development rake db:create\r\n```\r\n\r\nIt also tries to create test.\r\n\r\nI think this is violating the principle of least surprise. At a cursory glance, this also applies to `drop_current` which might be even more surprising.\r\n\r\n### Expected behavior\r\nOnly development environment is created.\r\n\r\n### Actual behavior\r\nIt tries to create test database too.\r\n\r\n### System configuration\r\nLatest."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27298",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27298/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27298/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27298/events",
    "html_url": "https://github.com/rails/rails/issues/27298",
    "id": 194178539,
    "number": 27298,
    "title": "EOFError instead of SMTP error",
    "user": {
      "login": "tobymurray-nanometrics",
      "id": 16090989,
      "avatar_url": "https://avatars.githubusercontent.com/u/16090989?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tobymurray-nanometrics",
      "html_url": "https://github.com/tobymurray-nanometrics",
      "followers_url": "https://api.github.com/users/tobymurray-nanometrics/followers",
      "following_url": "https://api.github.com/users/tobymurray-nanometrics/following{/other_user}",
      "gists_url": "https://api.github.com/users/tobymurray-nanometrics/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tobymurray-nanometrics/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tobymurray-nanometrics/subscriptions",
      "organizations_url": "https://api.github.com/users/tobymurray-nanometrics/orgs",
      "repos_url": "https://api.github.com/users/tobymurray-nanometrics/repos",
      "events_url": "https://api.github.com/users/tobymurray-nanometrics/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tobymurray-nanometrics/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107188,
        "url": "https://api.github.com/repos/rails/rails/labels/actionmailer",
        "name": "actionmailer",
        "color": "8B00FC",
        "default": false
      },
      {
        "id": 257468118,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20work",
        "name": "needs work",
        "color": "000000",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": null,
    "assignees": [

    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-12-07T21:41:46Z",
    "updated_at": "2017-01-02T14:34:46Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n\r\nWe are getting `EOFError` out of ActionMailer with no stack trace or useful error message. It appears to be bubbling out of `deliver_now`. The code below requires a real email account, so I've excluded the details here -you'll need to provide them to get the script to work. I believe the code below reproduces the symptom, but not necessarily the cause. \r\n\r\n```\r\nrequire 'net/smtp'\r\n\r\nreal_email_address = '' # This needs to actually be a real account\r\nreal_email_password = '' # This needs to actually be the corresponding password\r\n\r\n#line 96 of mail-2.2.7/lib/mail/network/delivery_methods/smtp.rb\r\nsmtp = Net::SMTP.new('smtp-relay.gmail.com', 587)\r\nsmtp.enable_starttls_auto if smtp.respond_to?(:enable_starttls_auto)\r\nsmtp.set_debug_output $stderr\r\n\r\nsmtp.start('does-not-matter', real_email_address, real_email_password, 'Login') do |smtp|\r\n  smtp.sendmail('Message does not matter', 'inconsistent from address', 'does not matter')\r\nend\r\n```\r\n\r\nTo be clear, it seems the error that arises when the `from` address is not appropriately authorized when coupled with the email address used to create the SMTP session. In the above code that discrepancy is captured by the difference between `real_email_address` and `inconsistent from address` (which is presumably not authorized to send from `real_email_address`).\r\n\r\n### Expected behavior\r\nSome form of actionable error, likely Net::SMTPError of some sort.\r\n\r\n### Actual behavior\r\n```\r\nConnection opened: smtp-relay.gmail.com:587\r\n-> \"220 smtp-relay.gmail.com ESMTP o192sm21049545itb.4 - gsmtp\\r\\n\"\r\n<- \"EHLO does-not-matter\\r\\n\"\r\n-> \"250-smtp-relay.gmail.com at your service, [***.***.***.***]\\r\\n\"\r\n\r\n<snip interaction>\r\n\r\nTLS connection started\r\n<- \"EHLO does-not-matter\\r\\n\"\r\n-> \"250-smtp-relay.gmail.com at your service, [***.***.***.***]\\r\\n\"\r\n\r\n<snip interaction>\r\n\r\n-> \"235 2.7.0 Accepted\\r\\n\"\r\n<- \"MAIL FROM:<inconsistent from address>\\r\\n\"\r\n-> \"550-5.7.1 Invalid credentials for relay [***.***.***.***]. The IP address you've\\r\\n\"\r\n-> \"550-5.7.1 registered in your G Suite SMTP Relay service doesn't match domain of\\r\\n\"\r\n-> \"550-5.7.1 the account this email is being sent from. If you are trying to relay\\r\\n\"\r\n-> \"550-5.7.1 mail from a domain that isn't registered under your G Suite account\\r\\n\"\r\n-> \"550-5.7.1 or has empty envelope-from, you must configure your mail server\\r\\n\"\r\n-> \"550-5.7.1 either to use SMTP AUTH to identify the sending domain or to present\\r\\n\"\r\n-> \"550-5.7.1 one of your domain names in the HELO or EHLO command. For more\\r\\n\"\r\n-> \"550-5.7.1 information, please visit\\r\\n\"\r\n-> \"550 5.7.1  https://support.google.com/a/answer/6140680#invalidcred o192sm21049545itb.4 - gsmtp\\r\\n\"\r\n<- \"QUIT\\r\\n\"\r\nEOFError: end of file reached\r\n```\r\n\r\n\r\n### System configuration\r\n**Rails version**:\r\nRails 4.2.7.1\r\n\r\n**Ruby version**:\r\njruby 9.1.6.0 (2.3.1) 2016-11-09 0150a76 OpenJDK 64-Bit Server VM 25.111-b14 on 1.8.0_111-8u111-b14-2ubuntu0.16.04.2-b14 +jit [linux-x86_64]"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27296",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27296/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27296/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27296/events",
    "html_url": "https://github.com/rails/rails/pull/27296",
    "id": 194044344,
    "number": 27296,
    "title": "Fix memory leak in action view",
    "user": {
      "login": "printercu",
      "id": 1144890,
      "avatar_url": "https://avatars.githubusercontent.com/u/1144890?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/printercu",
      "html_url": "https://github.com/printercu",
      "followers_url": "https://api.github.com/users/printercu/followers",
      "following_url": "https://api.github.com/users/printercu/following{/other_user}",
      "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
      "organizations_url": "https://api.github.com/users/printercu/orgs",
      "repos_url": "https://api.github.com/users/printercu/repos",
      "events_url": "https://api.github.com/users/printercu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/printercu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 3666649,
        "url": "https://api.github.com/repos/rails/rails/labels/actionview",
        "name": "actionview",
        "color": "d7e102",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kaspth",
      "id": 350807,
      "avatar_url": "https://avatars.githubusercontent.com/u/350807?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaspth",
      "html_url": "https://github.com/kaspth",
      "followers_url": "https://api.github.com/users/kaspth/followers",
      "following_url": "https://api.github.com/users/kaspth/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaspth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaspth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaspth/subscriptions",
      "organizations_url": "https://api.github.com/users/kaspth/orgs",
      "repos_url": "https://api.github.com/users/kaspth/repos",
      "events_url": "https://api.github.com/users/kaspth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaspth/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kaspth",
        "id": 350807,
        "avatar_url": "https://avatars.githubusercontent.com/u/350807?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kaspth",
        "html_url": "https://github.com/kaspth",
        "followers_url": "https://api.github.com/users/kaspth/followers",
        "following_url": "https://api.github.com/users/kaspth/following{/other_user}",
        "gists_url": "https://api.github.com/users/kaspth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kaspth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kaspth/subscriptions",
        "organizations_url": "https://api.github.com/users/kaspth/orgs",
        "repos_url": "https://api.github.com/users/kaspth/repos",
        "events_url": "https://api.github.com/users/kaspth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kaspth/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2016-12-07T13:03:39Z",
    "updated_at": "2016-12-23T12:08:38Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27296",
      "html_url": "https://github.com/rails/rails/pull/27296",
      "diff_url": "https://github.com/rails/rails/pull/27296.diff",
      "patch_url": "https://github.com/rails/rails/pull/27296.patch"
    },
    "body": "https://github.com/rails/rails/issues/27273 for details.\r\n\r\nHere I moved digest cache back to Digestor. In this way, it's possible not to clear DetailsKey cache, and keys for cached templates will be permanent.\r\n\r\n~I need to add testcase for not leaking memory.~\r\n~I'm fixing action pack tests.~"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27287",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27287/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27287/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27287/events",
    "html_url": "https://github.com/rails/rails/pull/27287",
    "id": 193893526,
    "number": 27287,
    "title": "Disable sorting of params in to_query",
    "user": {
      "login": "koenpunt",
      "id": 351038,
      "avatar_url": "https://avatars.githubusercontent.com/u/351038?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/koenpunt",
      "html_url": "https://github.com/koenpunt",
      "followers_url": "https://api.github.com/users/koenpunt/followers",
      "following_url": "https://api.github.com/users/koenpunt/following{/other_user}",
      "gists_url": "https://api.github.com/users/koenpunt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/koenpunt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/koenpunt/subscriptions",
      "organizations_url": "https://api.github.com/users/koenpunt/orgs",
      "repos_url": "https://api.github.com/users/koenpunt/repos",
      "events_url": "https://api.github.com/users/koenpunt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/koenpunt/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "eileencodes",
      "id": 1080678,
      "avatar_url": "https://avatars.githubusercontent.com/u/1080678?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eileencodes",
      "html_url": "https://github.com/eileencodes",
      "followers_url": "https://api.github.com/users/eileencodes/followers",
      "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
      "gists_url": "https://api.github.com/users/eileencodes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
      "organizations_url": "https://api.github.com/users/eileencodes/orgs",
      "repos_url": "https://api.github.com/users/eileencodes/repos",
      "events_url": "https://api.github.com/users/eileencodes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eileencodes/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "eileencodes",
        "id": 1080678,
        "avatar_url": "https://avatars.githubusercontent.com/u/1080678?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/eileencodes",
        "html_url": "https://github.com/eileencodes",
        "followers_url": "https://api.github.com/users/eileencodes/followers",
        "following_url": "https://api.github.com/users/eileencodes/following{/other_user}",
        "gists_url": "https://api.github.com/users/eileencodes/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/eileencodes/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/eileencodes/subscriptions",
        "organizations_url": "https://api.github.com/users/eileencodes/orgs",
        "repos_url": "https://api.github.com/users/eileencodes/repos",
        "events_url": "https://api.github.com/users/eileencodes/events{/privacy}",
        "received_events_url": "https://api.github.com/users/eileencodes/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 9,
    "created_at": "2016-12-06T21:42:52Z",
    "updated_at": "2016-12-06T22:23:11Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27287",
      "html_url": "https://github.com/rails/rails/pull/27287",
      "diff_url": "https://github.com/rails/rails/pull/27287.diff",
      "patch_url": "https://github.com/rails/rails/pull/27287.patch"
    },
    "body": "### Summary\r\n\r\nThe order of query params can be significant. For example in the rails_pjax gem, where the `_pjax` param is stripped from the url using a regex. Because of the sorting the `_pjax` param is always the first, which causes the test not to be representable for a real-world request where query parameters aren't necessarily sorted. \r\n\r\n### Other Information\r\n\r\nSee rails/pjax_rails#85 for a local fix in the testcase."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27273",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27273/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27273/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27273/events",
    "html_url": "https://github.com/rails/rails/issues/27273",
    "id": 193591919,
    "number": 27273,
    "title": "Memory leak in development",
    "user": {
      "login": "printercu",
      "id": 1144890,
      "avatar_url": "https://avatars.githubusercontent.com/u/1144890?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/printercu",
      "html_url": "https://github.com/printercu",
      "followers_url": "https://api.github.com/users/printercu/followers",
      "following_url": "https://api.github.com/users/printercu/following{/other_user}",
      "gists_url": "https://api.github.com/users/printercu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/printercu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/printercu/subscriptions",
      "organizations_url": "https://api.github.com/users/printercu/orgs",
      "repos_url": "https://api.github.com/users/printercu/repos",
      "events_url": "https://api.github.com/users/printercu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/printercu/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 3666649,
        "url": "https://api.github.com/repos/rails/rails/labels/actionview",
        "name": "actionview",
        "color": "d7e102",
        "default": false
      },
      {
        "id": 128692,
        "url": "https://api.github.com/repos/rails/rails/labels/needs%20feedback",
        "name": "needs feedback",
        "color": "ededed",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kaspth",
      "id": 350807,
      "avatar_url": "https://avatars.githubusercontent.com/u/350807?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaspth",
      "html_url": "https://github.com/kaspth",
      "followers_url": "https://api.github.com/users/kaspth/followers",
      "following_url": "https://api.github.com/users/kaspth/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaspth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaspth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaspth/subscriptions",
      "organizations_url": "https://api.github.com/users/kaspth/orgs",
      "repos_url": "https://api.github.com/users/kaspth/repos",
      "events_url": "https://api.github.com/users/kaspth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaspth/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kaspth",
        "id": 350807,
        "avatar_url": "https://avatars.githubusercontent.com/u/350807?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kaspth",
        "html_url": "https://github.com/kaspth",
        "followers_url": "https://api.github.com/users/kaspth/followers",
        "following_url": "https://api.github.com/users/kaspth/following{/other_user}",
        "gists_url": "https://api.github.com/users/kaspth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kaspth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kaspth/subscriptions",
        "organizations_url": "https://api.github.com/users/kaspth/orgs",
        "repos_url": "https://api.github.com/users/kaspth/repos",
        "events_url": "https://api.github.com/users/kaspth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kaspth/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 13,
    "created_at": "2016-12-05T19:45:08Z",
    "updated_at": "2016-12-20T07:54:03Z",
    "closed_at": null,
    "body": "### Steps to reproduce\r\n\r\nAdd lines to `ApplicationController`:\r\n```ruby\r\n  after_action do\r\n    logger.info 'Leaked: ' +\r\n      view_paths.first.instance_variable_get(:@cache).instance_variable_get(:@data).size.to_s\r\n  end\r\n```\r\n\r\nRefresh page few times. See the number is increasing.\r\n\r\nIt's related to #20384. Digests are cleared, but not cache objects. I haven't found easy way to clear all caches, as every controller seems to have its own.\r\n\r\n### Expected behavior\r\n\r\nCache size should not be incremented infinitely.\r\n\r\n### Actual behavior\r\n\r\nIt's incremented infinitely.\r\n\r\n### System configuration\r\n**Rails version**: 5.0.0.1\r\n\r\n**Ruby version**: 2.3\r\n"
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27268",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27268/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27268/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27268/events",
    "html_url": "https://github.com/rails/rails/issues/27268",
    "id": 193452042,
    "number": 27268,
    "title": "autoload vs eager load in docs clarify",
    "user": {
      "login": "akostadinov",
      "id": 1408661,
      "avatar_url": "https://avatars.githubusercontent.com/u/1408661?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akostadinov",
      "html_url": "https://github.com/akostadinov",
      "followers_url": "https://api.github.com/users/akostadinov/followers",
      "following_url": "https://api.github.com/users/akostadinov/following{/other_user}",
      "gists_url": "https://api.github.com/users/akostadinov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akostadinov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akostadinov/subscriptions",
      "organizations_url": "https://api.github.com/users/akostadinov/orgs",
      "repos_url": "https://api.github.com/users/akostadinov/repos",
      "events_url": "https://api.github.com/users/akostadinov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akostadinov/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      },
      {
        "id": 150377,
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "fxn",
      "id": 3387,
      "avatar_url": "https://avatars.githubusercontent.com/u/3387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fxn",
      "html_url": "https://github.com/fxn",
      "followers_url": "https://api.github.com/users/fxn/followers",
      "following_url": "https://api.github.com/users/fxn/following{/other_user}",
      "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fxn/subscriptions",
      "organizations_url": "https://api.github.com/users/fxn/orgs",
      "repos_url": "https://api.github.com/users/fxn/repos",
      "events_url": "https://api.github.com/users/fxn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fxn/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "fxn",
        "id": 3387,
        "avatar_url": "https://avatars.githubusercontent.com/u/3387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fxn",
        "html_url": "https://github.com/fxn",
        "followers_url": "https://api.github.com/users/fxn/followers",
        "following_url": "https://api.github.com/users/fxn/following{/other_user}",
        "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fxn/subscriptions",
        "organizations_url": "https://api.github.com/users/fxn/orgs",
        "repos_url": "https://api.github.com/users/fxn/repos",
        "events_url": "https://api.github.com/users/fxn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fxn/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-12-05T09:48:43Z",
    "updated_at": "2016-12-06T22:34:46Z",
    "closed_at": null,
    "body": "http://edgeguides.rubyonrails.org/autoloading_and_reloading_constants.html\r\n\r\nIt mentions eager load but doesn't explain how to use it. It is explained how to use autoload but autoload does not work reliably in production environment especially with threads. I think document should explain autoload should not be used at all and explain how eager loading is to be used, e.g.:\r\n```\r\nconfig.eager_load_paths << \"#{Rails.root}/lib\"\r\n```\r\n\r\nMy understanding is bases on #13142 as well on my personal bad experience with a new app I'm writing. But I'm too new to rails to take on actually wording the docs. Thus filing an issue."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27249",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27249/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27249/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27249/events",
    "html_url": "https://github.com/rails/rails/pull/27249",
    "id": 193024627,
    "number": 27249,
    "title": "Limited ids for with group by",
    "user": {
      "login": "ezr-ondrej",
      "id": 2884324,
      "avatar_url": "https://avatars.githubusercontent.com/u/2884324?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ezr-ondrej",
      "html_url": "https://github.com/ezr-ondrej",
      "followers_url": "https://api.github.com/users/ezr-ondrej/followers",
      "following_url": "https://api.github.com/users/ezr-ondrej/following{/other_user}",
      "gists_url": "https://api.github.com/users/ezr-ondrej/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ezr-ondrej/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ezr-ondrej/subscriptions",
      "organizations_url": "https://api.github.com/users/ezr-ondrej/orgs",
      "repos_url": "https://api.github.com/users/ezr-ondrej/repos",
      "events_url": "https://api.github.com/users/ezr-ondrej/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ezr-ondrej/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 1,
    "created_at": "2016-12-02T03:22:39Z",
    "updated_at": "2016-12-02T03:47:35Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27249",
      "html_url": "https://github.com/rails/rails/pull/27249",
      "diff_url": "https://github.com/rails/rails/pull/27249.diff",
      "patch_url": "https://github.com/rails/rails/pull/27249.patch"
    },
    "body": "fix bug in method `limited_ids_for`, presented with group by.\r\nI hope test is obvious. If not, please let me know, I will try to explain.\r\nNot sure this is the best solution. MIN() is not exactly what we want, but in general case it should work."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27239",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27239/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27239/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27239/events",
    "html_url": "https://github.com/rails/rails/pull/27239",
    "id": 192746390,
    "number": 27239,
    "title": "Logs exception backtrace in `ActiveSupport::TaggedLogging`",
    "user": {
      "login": "kruppel",
      "id": 279376,
      "avatar_url": "https://avatars.githubusercontent.com/u/279376?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kruppel",
      "html_url": "https://github.com/kruppel",
      "followers_url": "https://api.github.com/users/kruppel/followers",
      "following_url": "https://api.github.com/users/kruppel/following{/other_user}",
      "gists_url": "https://api.github.com/users/kruppel/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kruppel/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kruppel/subscriptions",
      "organizations_url": "https://api.github.com/users/kruppel/orgs",
      "repos_url": "https://api.github.com/users/kruppel/repos",
      "events_url": "https://api.github.com/users/kruppel/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kruppel/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107194,
        "url": "https://api.github.com/repos/rails/rails/labels/activesupport",
        "name": "activesupport",
        "color": "FC9300",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "pixeltrix",
      "id": 6321,
      "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pixeltrix",
      "html_url": "https://github.com/pixeltrix",
      "followers_url": "https://api.github.com/users/pixeltrix/followers",
      "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
      "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
      "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
      "repos_url": "https://api.github.com/users/pixeltrix/repos",
      "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "pixeltrix",
        "id": 6321,
        "avatar_url": "https://avatars.githubusercontent.com/u/6321?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/pixeltrix",
        "html_url": "https://github.com/pixeltrix",
        "followers_url": "https://api.github.com/users/pixeltrix/followers",
        "following_url": "https://api.github.com/users/pixeltrix/following{/other_user}",
        "gists_url": "https://api.github.com/users/pixeltrix/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/pixeltrix/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/pixeltrix/subscriptions",
        "organizations_url": "https://api.github.com/users/pixeltrix/orgs",
        "repos_url": "https://api.github.com/users/pixeltrix/repos",
        "events_url": "https://api.github.com/users/pixeltrix/events{/privacy}",
        "received_events_url": "https://api.github.com/users/pixeltrix/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-12-01T03:33:29Z",
    "updated_at": "2016-12-05T03:37:27Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27239",
      "html_url": "https://github.com/rails/rails/pull/27239",
      "diff_url": "https://github.com/rails/rails/pull/27239.diff",
      "patch_url": "https://github.com/rails/rails/pull/27239.patch"
    },
    "body": "### Summary\r\n\r\nAdds the exception backtrace to the TaggedLogging formatter, similar to what the base formatter class does. In addition, when a non `String` or `Exception` is handled, the formatter now outputs `msg.inspect`."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27235",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27235/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27235/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27235/events",
    "html_url": "https://github.com/rails/rails/pull/27235",
    "id": 192697034,
    "number": 27235,
    "title": "Fowardport changes to tasks/release.rb",
    "user": {
      "login": "maclover7",
      "id": 3020626,
      "avatar_url": "https://avatars.githubusercontent.com/u/3020626?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maclover7",
      "html_url": "https://github.com/maclover7",
      "followers_url": "https://api.github.com/users/maclover7/followers",
      "following_url": "https://api.github.com/users/maclover7/following{/other_user}",
      "gists_url": "https://api.github.com/users/maclover7/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maclover7/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maclover7/subscriptions",
      "organizations_url": "https://api.github.com/users/maclover7/orgs",
      "repos_url": "https://api.github.com/users/maclover7/repos",
      "events_url": "https://api.github.com/users/maclover7/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maclover7/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [

    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "matthewd",
      "id": 1034,
      "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/matthewd",
      "html_url": "https://github.com/matthewd",
      "followers_url": "https://api.github.com/users/matthewd/followers",
      "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
      "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
      "organizations_url": "https://api.github.com/users/matthewd/orgs",
      "repos_url": "https://api.github.com/users/matthewd/repos",
      "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/matthewd/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "matthewd",
        "id": 1034,
        "avatar_url": "https://avatars.githubusercontent.com/u/1034?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/matthewd",
        "html_url": "https://github.com/matthewd",
        "followers_url": "https://api.github.com/users/matthewd/followers",
        "following_url": "https://api.github.com/users/matthewd/following{/other_user}",
        "gists_url": "https://api.github.com/users/matthewd/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/matthewd/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/matthewd/subscriptions",
        "organizations_url": "https://api.github.com/users/matthewd/orgs",
        "repos_url": "https://api.github.com/users/matthewd/repos",
        "events_url": "https://api.github.com/users/matthewd/events{/privacy}",
        "received_events_url": "https://api.github.com/users/matthewd/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 0,
    "created_at": "2016-11-30T22:21:55Z",
    "updated_at": "2016-11-30T22:21:56Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27235",
      "html_url": "https://github.com/rails/rails/pull/27235",
      "diff_url": "https://github.com/rails/rails/pull/27235.diff",
      "patch_url": "https://github.com/rails/rails/pull/27235.patch"
    },
    "body": "### Summary\r\n\r\nFowardporting changes to `tasks/release.rb` that were made as part of the 5.0.1.rc1 release cycle.\r\n\r\nr? @matthewd "
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27234",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27234/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27234/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27234/events",
    "html_url": "https://github.com/rails/rails/pull/27234",
    "id": 192683045,
    "number": 27234,
    "title": "5-0-stable: Avoid `unscope(:order)` when `limit_value` is presented for `count`and `exists?`",
    "user": {
      "login": "kamipo",
      "id": 12642,
      "avatar_url": "https://avatars.githubusercontent.com/u/12642?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kamipo",
      "html_url": "https://github.com/kamipo",
      "followers_url": "https://api.github.com/users/kamipo/followers",
      "following_url": "https://api.github.com/users/kamipo/following{/other_user}",
      "gists_url": "https://api.github.com/users/kamipo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kamipo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kamipo/subscriptions",
      "organizations_url": "https://api.github.com/users/kamipo/orgs",
      "repos_url": "https://api.github.com/users/kamipo/repos",
      "events_url": "https://api.github.com/users/kamipo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kamipo/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 107191,
        "url": "https://api.github.com/repos/rails/rails/labels/activerecord",
        "name": "activerecord",
        "color": "0b02e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "kaspth",
      "id": 350807,
      "avatar_url": "https://avatars.githubusercontent.com/u/350807?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaspth",
      "html_url": "https://github.com/kaspth",
      "followers_url": "https://api.github.com/users/kaspth/followers",
      "following_url": "https://api.github.com/users/kaspth/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaspth/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaspth/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaspth/subscriptions",
      "organizations_url": "https://api.github.com/users/kaspth/orgs",
      "repos_url": "https://api.github.com/users/kaspth/repos",
      "events_url": "https://api.github.com/users/kaspth/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaspth/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "kaspth",
        "id": 350807,
        "avatar_url": "https://avatars.githubusercontent.com/u/350807?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/kaspth",
        "html_url": "https://github.com/kaspth",
        "followers_url": "https://api.github.com/users/kaspth/followers",
        "following_url": "https://api.github.com/users/kaspth/following{/other_user}",
        "gists_url": "https://api.github.com/users/kaspth/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/kaspth/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/kaspth/subscriptions",
        "organizations_url": "https://api.github.com/users/kaspth/orgs",
        "repos_url": "https://api.github.com/users/kaspth/repos",
        "events_url": "https://api.github.com/users/kaspth/events{/privacy}",
        "received_events_url": "https://api.github.com/users/kaspth/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 2,
    "created_at": "2016-11-30T21:22:25Z",
    "updated_at": "2016-12-24T19:02:48Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27234",
      "html_url": "https://github.com/rails/rails/pull/27234",
      "diff_url": "https://github.com/rails/rails/pull/27234.diff",
      "patch_url": "https://github.com/rails/rails/pull/27234.patch"
    },
    "body": "Backport #26972 and #26981.\r\n\r\nOur Rails app encountered lots of slow queries due to except `:order` in production.\r\nCurrently I'm using `relation.load.size` instead as a workaround to keep `:order`.\r\n\r\nI'd like to backport these fixes to latest stable branch."
  },
  {
    "url": "https://api.github.com/repos/rails/rails/issues/27232",
    "repository_url": "https://api.github.com/repos/rails/rails",
    "labels_url": "https://api.github.com/repos/rails/rails/issues/27232/labels{/name}",
    "comments_url": "https://api.github.com/repos/rails/rails/issues/27232/comments",
    "events_url": "https://api.github.com/repos/rails/rails/issues/27232/events",
    "html_url": "https://github.com/rails/rails/pull/27232",
    "id": 192645343,
    "number": 27232,
    "title": "Simplify linking to GitHub or the API site in the guides",
    "user": {
      "login": "robin850",
      "id": 354185,
      "avatar_url": "https://avatars.githubusercontent.com/u/354185?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/robin850",
      "html_url": "https://github.com/robin850",
      "followers_url": "https://api.github.com/users/robin850/followers",
      "following_url": "https://api.github.com/users/robin850/following{/other_user}",
      "gists_url": "https://api.github.com/users/robin850/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/robin850/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/robin850/subscriptions",
      "organizations_url": "https://api.github.com/users/robin850/orgs",
      "repos_url": "https://api.github.com/users/robin850/repos",
      "events_url": "https://api.github.com/users/robin850/events{/privacy}",
      "received_events_url": "https://api.github.com/users/robin850/received_events",
      "type": "User",
      "site_admin": false
    },
    "labels": [
      {
        "id": 150377,
        "url": "https://api.github.com/repos/rails/rails/labels/docs",
        "name": "docs",
        "color": "02d7e1",
        "default": false
      }
    ],
    "state": "open",
    "locked": false,
    "assignee": {
      "login": "fxn",
      "id": 3387,
      "avatar_url": "https://avatars.githubusercontent.com/u/3387?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fxn",
      "html_url": "https://github.com/fxn",
      "followers_url": "https://api.github.com/users/fxn/followers",
      "following_url": "https://api.github.com/users/fxn/following{/other_user}",
      "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fxn/subscriptions",
      "organizations_url": "https://api.github.com/users/fxn/orgs",
      "repos_url": "https://api.github.com/users/fxn/repos",
      "events_url": "https://api.github.com/users/fxn/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fxn/received_events",
      "type": "User",
      "site_admin": false
    },
    "assignees": [
      {
        "login": "fxn",
        "id": 3387,
        "avatar_url": "https://avatars.githubusercontent.com/u/3387?v=3",
        "gravatar_id": "",
        "url": "https://api.github.com/users/fxn",
        "html_url": "https://github.com/fxn",
        "followers_url": "https://api.github.com/users/fxn/followers",
        "following_url": "https://api.github.com/users/fxn/following{/other_user}",
        "gists_url": "https://api.github.com/users/fxn/gists{/gist_id}",
        "starred_url": "https://api.github.com/users/fxn/starred{/owner}{/repo}",
        "subscriptions_url": "https://api.github.com/users/fxn/subscriptions",
        "organizations_url": "https://api.github.com/users/fxn/orgs",
        "repos_url": "https://api.github.com/users/fxn/repos",
        "events_url": "https://api.github.com/users/fxn/events{/privacy}",
        "received_events_url": "https://api.github.com/users/fxn/received_events",
        "type": "User",
        "site_admin": false
      }
    ],
    "milestone": null,
    "comments": 3,
    "created_at": "2016-11-30T18:40:51Z",
    "updated_at": "2016-11-30T21:27:41Z",
    "closed_at": null,
    "pull_request": {
      "url": "https://api.github.com/repos/rails/rails/pulls/27232",
      "html_url": "https://github.com/rails/rails/pull/27232",
      "diff_url": "https://github.com/rails/rails/pull/27232.diff",
      "patch_url": "https://github.com/rails/rails/pull/27232.patch"
    },
    "body": "Hi,\r\n\r\nThis is a tiny pull request that addresses the ticket in Basecamp regarding simplifying linking to GitHub or the API site in GitHub.\r\n\r\nUsing `grep` inside the guide folder, it looks like:\r\n\r\n* Most GitHub links are either for release notes or to refer to the code file inside the \"Active Support Core Extensions\" guide.\r\n* The `api://` scheme can definitely improve the guides. At the moment, links are barely going to the current version's site so they may become broken in the future or a feature may be documented while it's only available in newer versions.\r\n\r\nSo this pull request addresses the following things:\r\n\r\n* It is possible to link to a file hosted on GitHub like this for instance:\r\n  * `github://5-1-stable/activesupport/CHANGELOG.md` will become \"https://github.com/rails/rails/tree/5-1-stable/activesupport/CHANGELOG.md\".\r\n  * `github://github://abstract_controller/caching.rb` will become \"https://github.com/rails/rails/tree/master/actionpack/lib/abstract_controller/caching.rb\" (and the `master` part is automatically changed if the `RAILS_VERSION` environment variable is defined).\r\n* Every note that have \"Defined in `path/to/file.rb`\" are now automatically expanded with a link.\r\n* It is possible to link to the API site like this for instance:\r\n  * For instance methods, `api://ActionDispatch::Http::Cache::Request#etag_matches?` will become \"http://edgeapi.rubyonrails.org/classes/ActionDispatch/Http/Cache/Request.html#method-i-etag_matches-3F\" (`?` and `!` are properly URI-encoded for anchors and the `edgeapi` part changes to `api` with the proper version in the URL if the `RAILS_VERSION` environment variable is defined).\r\n  * For class methods, `api://ActionController::Renderer.new` will become \"http://edgeapi.rubyonrails.org/classes/ActionController/Renderer.html#method-c-new\".\r\n\r\nThere's already an opened pull request to address the automatic linking of notes inside the core extensions guide. The author has been properly credited inside the commit but here's the PR for reference: https://github.com/rails/rails/pull/20036.\r\n\r\nLet met know if there's anything that isn't addressed or wrong here!\r\n\r\nHave a nice day ! :-)"
  }
]}
